<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="20:TestChargerMonitorC.nc">
      <from><interface-ref name="Notify" scoped="" ref="0x2b8fd4610020"/></from>
      <to><interface-ref name="Notify" scoped="" ref="0x2b8fd45d3020"/></to>
    </wire>
    <wire loc="23:TestChargerMonitorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8fd45e2208"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8fd45efe50"/></to>
    </wire>
    <wire loc="24:TestChargerMonitorC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8fd45e1a08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8fd45eb570"/></to>
    </wire>
    <wire loc="25:TestChargerMonitorC.nc">
      <from><interface-ref name="PG" scoped="" ref="0x2b8fd45ddb18"/></from>
      <to><interface-ref name="PG" scoped="" ref="0x2b8fd45e6650"/></to>
    </wire>
    <wire loc="26:TestChargerMonitorC.nc">
      <from><interface-ref name="STAT1" scoped="" ref="0x2b8fd45dbc70"/></from>
      <to><interface-ref name="STAT1" scoped="" ref="0x2b8fd45e57d8"/></to>
    </wire>
    <wire loc="27:TestChargerMonitorC.nc">
      <from><interface-ref name="STAT2" scoped="" ref="0x2b8fd45dadf8"/></from>
      <to><interface-ref name="STAT2" scoped="" ref="0x2b8fd45e4960"/></to>
    </wire>
    <wire loc="28:TestChargerMonitorC.nc">
      <from><interface-ref name="PGNotify" scoped="" ref="0x2b8fd45d4548"/></from>
      <to><interface-ref name="BoolNotify" scoped="" ref="0x2b8fd45e3c30"/></to>
    </wire>
    <wire loc="33:TestChargerMonitorC.nc">
      <from><interface-ref name="ChargingLedOn" scoped="" ref="0x2b8fd461b688"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd3eb26c8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TestCase" scoped="" ref="0x2b8fd3eb26c8"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd3eb6020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:TestChargerMonitorC.nc">
      <from><interface-ref name="DoneChargingLedOn" scoped="" ref="0x2b8fd4619020"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd45957f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TestCase" scoped="" ref="0x2b8fd45957f0"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd3eb6020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:TestChargerMonitorC.nc">
      <from><interface-ref name="ErrorLedOn" scoped="" ref="0x2b8fd4619840"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd45909b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TestCase" scoped="" ref="0x2b8fd45909b8"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd3eb6020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:TestChargerMonitorC.nc">
      <from><interface-ref name="LedsOff" scoped="" ref="0x2b8fd46180a8"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd45c4c68"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TestCase" scoped="" ref="0x2b8fd45c4c68"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd3eb6020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:TestChargerMonitorC.nc">
      <from><interface-ref name="DidNotStartCharge" scoped="" ref="0x2b8fd4618910"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd45bfd28"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TestCase" scoped="" ref="0x2b8fd45bfd28"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd3eb6020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:TestChargerMonitorC.nc">
      <from><interface-ref name="NotifyNotCalled" scoped="" ref="0x2b8fd4617198"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd45ba020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TestCase" scoped="" ref="0x2b8fd45ba020"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd3eb6020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:TestChargerMonitorC.nc">
      <from><interface-ref name="PGNotifySetTrue" scoped="" ref="0x2b8fd46179e8"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd45b50e0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TestCase" scoped="" ref="0x2b8fd45b50e0"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd3eb6020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:TestChargerMonitorC.nc">
      <from><interface-ref name="PGNotifySetFalse" scoped="" ref="0x2b8fd46163a8"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd45b1370"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TestCase" scoped="" ref="0x2b8fd45b1370"/></from>
      <to><interface-ref name="TestCase" scoped="" ref="0x2b8fd3eb6020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:TestChargerMonitorC.nc">
      <from><interface-ref name="TestTimer" scoped="" ref="0x2b8fd4616ce8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8fd3e9e128"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8fd3e9e128"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b8fd3bf44d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b8fd3bf44d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8fd3e92af8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b8fd3e4e648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b8fd3e151a8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b8fd3e151a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b8fd469b2f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b8fd3e8ce80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8fd3e39290"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b8fd4695688"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b8fd46a1678"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b8fd46a1678"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b8fd46ca5a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8fd4698410"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd3dc2b40"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8fd3dc2b40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd3dba878"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b8fd46ca5a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b8fd46eeca8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd46c6690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd3cbd060"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8fd3cbd060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd3ccb1d8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b8fd46c1368"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b8fd3cb82c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd46eadd8"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd46c6690"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b8fd46e5ab0"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b8fd46c1368"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b8fd3c6ccd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd483caf8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b8fd3c6ccd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd4702108"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b8fd3c6ccd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd46ee500"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8fd3c6c5e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd3c68530"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b8fd3c67338"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x2b8fd3c6ccd0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x2b8fd3c67988"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x2b8fd3c6b3a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x2b8fd3c66020"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x2b8fd3c98020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b8fd3c68c38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd3c7cca8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x2b8fd3cd1768"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x2b8fd3ce1370"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8fd3cb82c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b8fd3cdce60"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8fd3cb82c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b8fd3cd5118"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8fd3cb82c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b8fd3ce6278"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b8fd3cf26e0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b8fd3ba50f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b8fd3ba32b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b8fd439ba50"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b8fd3ba32b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b8fd42f6c80"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b8fd3ba32b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b8fd3cf2020"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8fd3d72108"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd3d82b18"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8fd3d82b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd47028b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd3db6bf8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd3cbd060"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd47009e8"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd3db6bf8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b8fd3dd0b10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd3d72108"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b8fd3e4a5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b8fd3ea1020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd4597ae0"/></from>
      <to><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd3eb3288"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDown" scoped="" ref="0x2b8fd4597210"/></from>
      <to><interface-ref name="TearDown" scoped="" ref="0x2b8fd3eb4580"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUp" scoped="" ref="0x2b8fd45988f0"/></from>
      <to><interface-ref name="SetUp" scoped="" ref="0x2b8fd3eb5900"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd4598020"/></from>
      <to><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd3eb6c98"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <from><interface-ref name="waitForSendDone" scoped="" ref="0x2b8fd3ee5cf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <from><interface-ref name="begin" scoped="" ref="0x2b8fd3ee7d50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/WireTUnitC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b8fd3edaae8"/></from>
      <to><interface-ref name="SendState" scoped="" ref="0x2b8fd3fad888"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/WireTUnitC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b8fd3eead68"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b8fd44a3020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/WireTUnitC.nc">
      <from><interface-ref name="TestState" scoped="" ref="0x2b8fd3edbc70"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b8fd44a8ab8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <from><interface-ref name="runDone" scoped="" ref="0x2b8fd3ee4b38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/WireTUnitC.nc">
      <from><interface-ref name="SerialSplitControl" scoped="" ref="0x2b8fd3ed0998"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8fd40b8a98"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/WireTUnitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8fd3ed38f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8fd44c3250"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/WireTUnitC.nc">
      <from><interface-ref name="TUnitState" scoped="" ref="0x2b8fd3ed6e10"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b8fd44aaa28"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b8fd3f62398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd44922d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b8fd3f62398"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b8fd42fb020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b8fd3f62398"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b8fd42f9e30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b8fd3f62398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd4286350"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b8fd3f62398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd410d110"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/WireTUnitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b8fd3f62398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd3eb83d8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b8fd44aaa28"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b8fd4463608"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b8fd44a8ab8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b8fd4463608"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b8fd3fad888"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b8fd447b978"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b8fd40b8a98"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8fd410d728"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8fd44c3250"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8fd44bd5e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/WireTUnitC.nc">
      <from><interface-ref name="TUnitProcessing" scoped="" ref="0x2b8fd3fac818"/></from>
      <to><interface-ref name="TUnitProcessing" scoped="" ref="0x2b8fd3edd968"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b8fd3f63ba0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b8fd3f5fe18"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b8fd3f6c490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b8fd3a8a6d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b8fd3a8a6d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b8fd3b88df8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b8fd3f6ce68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd3f5e170"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8fd3f5e170"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd3f59c70"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b8fd3f6b560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b8fd3f62398"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8fd3f5e7c0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8fd3c89ce0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b8fd3f58a00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd44cbd90"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b8fd3f58a00"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x2b8fd3f5d558"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x2b8fd3f583a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd3c6c5e8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b8fd3f570a8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b8fd3f5dba8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd3b87c58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b8fd3b82168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b8fd3a30ca0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b8fd447b978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b8fd4463608"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b8fd3fa6020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b8fd3f63ba0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingC.nc">
      <from><interface-ref name="SerialEventSend" scoped="" ref="0x2b8fd3fbbc00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8fd4446800"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8fd4446800"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8fd47530e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x2b8fd3fd5598"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8fd4471aa0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8fd4471aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8fd40b4c38"/>
      <arguments>
        <value cst="I:255">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingC.nc">
      <from><interface-ref name="SerialSplitControl" scoped="" ref="0x2b8fd3fd5ca8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8fd40b8a98"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingC.nc">
      <from><interface-ref name="SerialState" scoped="" ref="0x2b8fd3fc47e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b8fd4468978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b8fd4468978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b8fd4463608"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b8fd3fbc650"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b8fd447b978"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingC.nc">
      <from><interface-ref name="TUnitProcessing" scoped="" ref="0x2b8fd3faa848"/></from>
      <to><interface-ref name="TUnitProcessing" scoped="" ref="0x2b8fd3fac818"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingP.nc">
      <from><interface-ref name="sendEventMsg" scoped="" ref="0x2b8fd3fd1960"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingP.nc">
      <from><interface-ref name="allDone" scoped="" ref="0x2b8fd3fd07a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8fd44783f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8fd40b32a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8fd40b32a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8fd4115d20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8fd4477020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8fd40b2020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8fd40b2020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8fd4116738"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b8fd44765b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8fd40b1658"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8fd40b1658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8fd4114908"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8fd4753cf8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8fd4052020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8fd4751908"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8fd40b2020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8fd4052020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8fd409b2c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8fd409a060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8fd40b5aa8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8fd40b5aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8fd40ad460"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8fd409ac38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8fd40b2020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8fd4098268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8fd40b32a8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b8fd4097020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b8fd40977c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b8fd410d728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8fd4132da8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8fd40b4c38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8fd4116180"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8fd410d110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd4132790"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8fd41098f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8fd40b0020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b8fd4112308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8fd410b208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b8fd4111020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8fd410c760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b8fd4109020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b8fd4458130"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8fd410b208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8fd426c6f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8fd410c760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8fd426c020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b8fd426b5b0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b8fd4109020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8fd412abc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8fd41098f8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8fd4269268"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8fd41098f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8fd4261bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8fd41098f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b8fd426be78"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b8fd414eb48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b8fd426a750"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b8fd412b950"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b8fd4148b38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b8fd4263328"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b8fd4143b00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8fd42942b8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b8fd42942b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8fd4292db0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b8fd4284c98"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b8fd4294a80"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b8fd4294a80"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b8fd428dda0"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b8fd4193dd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b8fd41508e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b8fd4195590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b8fd418e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b8fd4268908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b8fd4267100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b8fd428fcc8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b8fd428d5d8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b8fd428d5d8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b8fd42ca0c0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b8fd428dda0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b8fd42ca820"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b8fd4292db0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8fd4286928"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8fd428a080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd437b528"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8fd437b528"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd4376ac8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8fd42f3de8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd428a080"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b8fd42c8790"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8fd4304700"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8fd4304700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8fd42fb730"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b8fd42f4020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8fd4303020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8fd4303020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8fd42fa020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b8fd42f47c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b8fd4303860"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b8fd4303860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b8fd42fa8a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b8fd42ff020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b8fd42f76d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b8fd4302e58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b8fd42f8568"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b8fd43006f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b8fd42f8e00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8fd42f5340"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8fd3f5e7c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b8fd4322020"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b8fd3ba50f0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b8fd4322020"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b8fd3ba50f0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b8fd4373ce8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd436c1e0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8fd436c1e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd4436420"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd443ea88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd436adb8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8fd436adb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8fd4387a70"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b8fd4433688"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd44419e0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8fd44419e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8fd483b2f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b8fd438c108"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b8fd43a0de0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8fd4392020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b8fd43b0700"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8fd4392020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b8fd43ab988"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8fd4392020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b8fd43a6b88"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b8fd439a148"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b8fd3ba50f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd487b3c8"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd443ea88"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8fd446c060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8fd40b32a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8fd446cc18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8fd40b2020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b8fd4463608"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b8fd4492d90"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8fd44cbd90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8fd44bd020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b8fd44b57c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b8fd44ce950"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b8fd44ce950"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2b8fd44ed4d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b8fd44bb958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b8fd44cdb20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b8fd44cdb20"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2b8fd44ec658"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b8fd44baae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b8fd44ccca8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b8fd44ccca8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b8fd44eb7e0"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b8fd44ed4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd453c370"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b8fd44ec658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd453c370"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b8fd44eb7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd453c370"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b8fd4530020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4551370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b8fd4515af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4566a88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b8fd450aaf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd455fd28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b8fd45017e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4558020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b8fd452bc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4551370"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b8fd44f57e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4526020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b8fd45034d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4558020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b8fd44f3af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd453c370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b8fd44e8c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd45367c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b8fd4511020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4566a88"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b8fd4506020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd455fd28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b8fd44fa020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4526020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b8fd44ef020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd453c370"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b8fd44e41a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd45367c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b8fd450e4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4566a88"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b8fd44fdc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4558020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b8fd452d968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4551370"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b8fd450c7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd455fd28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b8fd44f74d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4526020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b8fd452f658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4551370"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b8fd44ea968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd45367c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b8fd4514c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4566a88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b8fd4509c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd455fd28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b8fd4500968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4558020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b8fd44f4968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4526020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b8fd44f2c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd453c370"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b8fd44e7e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd45367c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b8fd45101a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4566a88"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b8fd45051a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd455fd28"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b8fd44f91a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4526020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b8fd44ee1a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd453c370"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b8fd44e3348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd45367c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b8fd44fce00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4558020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b8fd4516658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4566a88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b8fd450b968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd455fd28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b8fd4502658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4558020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b8fd452caf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4551370"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b8fd44f6658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4526020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b8fd4504348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4558020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b8fd44e9af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd45367c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b8fd4513e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4566a88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b8fd4508e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd455fd28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b8fd44ffaf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4558020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b8fd44c9d70"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4526020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b8fd44f1e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd453c370"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b8fd44e5020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd45367c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b8fd450f348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4566a88"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b8fd452e7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4551370"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b8fd450d658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd455fd28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b8fd44e14d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd45367c0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b8fd44f8348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b8fd4526020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd4593ce8"/></from>
      <to><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd3eb3288"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDown" scoped="" ref="0x2b8fd4593418"/></from>
      <to><interface-ref name="TearDown" scoped="" ref="0x2b8fd3eb4580"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUp" scoped="" ref="0x2b8fd45949d8"/></from>
      <to><interface-ref name="SetUp" scoped="" ref="0x2b8fd3eb5900"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd4594108"/></from>
      <to><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd3eb6c98"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd45c5020"/></from>
      <to><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd3eb3288"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDown" scoped="" ref="0x2b8fd45c6620"/></from>
      <to><interface-ref name="TearDown" scoped="" ref="0x2b8fd3eb4580"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUp" scoped="" ref="0x2b8fd458fce8"/></from>
      <to><interface-ref name="SetUp" scoped="" ref="0x2b8fd3eb5900"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd458f418"/></from>
      <to><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd3eb6c98"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd45c0080"/></from>
      <to><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd3eb3288"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDown" scoped="" ref="0x2b8fd45c2768"/></from>
      <to><interface-ref name="TearDown" scoped="" ref="0x2b8fd3eb4580"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUp" scoped="" ref="0x2b8fd45c3e70"/></from>
      <to><interface-ref name="SetUp" scoped="" ref="0x2b8fd3eb5900"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd45c35a0"/></from>
      <to><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd3eb6c98"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd45bc210"/></from>
      <to><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd3eb3288"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDown" scoped="" ref="0x2b8fd45bd8f0"/></from>
      <to><interface-ref name="TearDown" scoped="" ref="0x2b8fd3eb4580"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUp" scoped="" ref="0x2b8fd45bd020"/></from>
      <to><interface-ref name="SetUp" scoped="" ref="0x2b8fd3eb5900"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd45be620"/></from>
      <to><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd3eb6c98"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd45b8418"/></from>
      <to><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd3eb3288"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDown" scoped="" ref="0x2b8fd45b9ae0"/></from>
      <to><interface-ref name="TearDown" scoped="" ref="0x2b8fd3eb4580"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUp" scoped="" ref="0x2b8fd45b9210"/></from>
      <to><interface-ref name="SetUp" scoped="" ref="0x2b8fd3eb5900"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd45ba8f0"/></from>
      <to><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd3eb6c98"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd45b3620"/></from>
      <to><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd3eb3288"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDown" scoped="" ref="0x2b8fd45b4ce8"/></from>
      <to><interface-ref name="TearDown" scoped="" ref="0x2b8fd3eb4580"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUp" scoped="" ref="0x2b8fd45b4418"/></from>
      <to><interface-ref name="SetUp" scoped="" ref="0x2b8fd3eb5900"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd45b59b0"/></from>
      <to><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd3eb6c98"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd45af768"/></from>
      <to><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd3eb3288"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="TearDown" scoped="" ref="0x2b8fd45b0e70"/></from>
      <to><interface-ref name="TearDown" scoped="" ref="0x2b8fd3eb4580"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUp" scoped="" ref="0x2b8fd45b05a0"/></from>
      <to><interface-ref name="SetUp" scoped="" ref="0x2b8fd3eb5900"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <from><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd45b1c40"/></from>
      <to><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd3eb6c98"/></to>
    </wire>
    <wire loc="93:../../ChargerMonitor/ChargerMonitorP.nc">
      <from><interface-ref name="timerstop" scoped="" ref="0x2b8fd45fb190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../ChargerMonitor/ChargerMonitorP.nc">
      <from><interface-ref name="timerstart" scoped="" ref="0x2b8fd45fd590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="TestChargerMonitorC.TestTimerC" loc="44(TestChargerMonitorC.TestTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaAlarmC" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaAlarmC):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b8fd3bf5338"/>
            <typename><typedef-ref name="T62khz" ref="0x2b8fd3bf5620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8fd3c10a10"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3c0d198"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC" loc="35(Counter62khz32C.AtmegaCounterC):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b8fd3bf5338"/>
            <typename><typedef-ref name="T62khz" ref="0x2b8fd3bf5620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterC.AtmegaCounterP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8fd3d84d90"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3d814e8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b8fd3bf5338"/>
            <typename><typedef-ref name="T62khz" ref="0x2b8fd3bf5620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b8fd3bf5338"/>
            <typename><typedef-ref name="T62khz" ref="0x2b8fd3bf5620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestChargerMonitorC.ChargingLedOnC" loc="44(TestChargerMonitorC.ChargingLedOnC):/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <documentation loc="40:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
        <short>&#10; Entry point configuration that creates new TUnit test cases&#10; </short>
        <long>&#10; Entry point configuration that creates new TUnit test cases&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TestCaseC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TUnitP" loc="72:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/spensamote/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/spensamote/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="Link_TUnitProcessingC" loc="38:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingC.nc">
      <configuration/>
    </component>
    <component qname="Link_TUnitProcessingP" loc="39:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingP.nc">
      <documentation loc="32:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessing.h">
        <short>&#10; Automatically generated header file for TUnitProcessing&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="Link_TUnitProcessingC.SerialEventSendC" loc="47(Link_TUnitProcessingC.SerialEventSendC):/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:255">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Link_TUnitProcessingC.SerialEventSendC.AMQueueEntryP" loc="43(Link_TUnitProcessingC.SerialEventSendC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2013/04/18 13:00:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro32C.TransformCounterC" loc="54(CounterMicro32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc40b8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b8fd3bc4410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x2b8fd3be64d0"/>
            <typename><typedef-ref name="TMcu" ref="0x2b8fd3be6b18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="CounterMcu32C.AtmegaCounterC" loc="35(CounterMcu32C.AtmegaCounterC):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x2b8fd3be64d0"/>
            <typename><typedef-ref name="TMcu" ref="0x2b8fd3be6b18"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP" loc="35(CounterMcu32C.AtmegaCounterC.AtmegaCounterP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8fd3d84d90"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3d814e8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x2b8fd3be64d0"/>
            <typename><typedef-ref name="TMcu" ref="0x2b8fd3be6b18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x2b8fd3be64d0"/>
            <typename><typedef-ref name="TMcu" ref="0x2b8fd3be6b18"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Link_TUnitProcessingC.SerialAMReceiverC" loc="43(Link_TUnitProcessingC.SerialAMReceiverC):/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="I:255">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Link_TUnitProcessingC.SerialStateC" loc="65(Link_TUnitProcessingC.SerialStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Link_TUnitProcessingC.SendStateC" loc="65(Link_TUnitProcessingC.SendStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireTUnitC.TUnitStateC" loc="65(WireTUnitC.TUnitStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireTUnitC.TestStateC" loc="65(WireTUnitC.TestStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/spensamote/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestChargerMonitorC.DoneChargingLedOnC" loc="44(TestChargerMonitorC.DoneChargingLedOnC):/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <documentation loc="40:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
        <short>&#10; Entry point configuration that creates new TUnit test cases&#10; </short>
        <long>&#10; Entry point configuration that creates new TUnit test cases&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TestCaseC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestChargerMonitorC.ErrorLedOnC" loc="44(TestChargerMonitorC.ErrorLedOnC):/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <documentation loc="40:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
        <short>&#10; Entry point configuration that creates new TUnit test cases&#10; </short>
        <long>&#10; Entry point configuration that creates new TUnit test cases&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TestCaseC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestChargerMonitorC.LedsOffC" loc="44(TestChargerMonitorC.LedsOffC):/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <documentation loc="40:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
        <short>&#10; Entry point configuration that creates new TUnit test cases&#10; </short>
        <long>&#10; Entry point configuration that creates new TUnit test cases&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TestCaseC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestChargerMonitorC.DidNotStartChargeC" loc="44(TestChargerMonitorC.DidNotStartChargeC):/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <documentation loc="40:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
        <short>&#10; Entry point configuration that creates new TUnit test cases&#10; </short>
        <long>&#10; Entry point configuration that creates new TUnit test cases&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TestCaseC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestChargerMonitorC.NotifyNotCalledC" loc="44(TestChargerMonitorC.NotifyNotCalledC):/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <documentation loc="40:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
        <short>&#10; Entry point configuration that creates new TUnit test cases&#10; </short>
        <long>&#10; Entry point configuration that creates new TUnit test cases&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TestCaseC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestChargerMonitorC.PGNotifySetTrueC" loc="44(TestChargerMonitorC.PGNotifySetTrueC):/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <documentation loc="40:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
        <short>&#10; Entry point configuration that creates new TUnit test cases&#10; </short>
        <long>&#10; Entry point configuration that creates new TUnit test cases&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TestCaseC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestChargerMonitorC.PGNotifySetFalseC" loc="44(TestChargerMonitorC.PGNotifySetFalseC):/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <documentation loc="40:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
        <short>&#10; Entry point configuration that creates new TUnit test cases&#10; </short>
        <long>&#10; Entry point configuration that creates new TUnit test cases&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TestCaseC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChargerMonitorP" loc="3:../../ChargerMonitor/ChargerMonitorP.nc">
      <module/>
    </component>
    <component qname="TestChargerMonitorP" loc="4:TestChargerMonitorP.nc">
      <documentation loc="32:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCase.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b8fd3c10a10" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8fd3c10a10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8fd3c0d198" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3c0d198"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b8fd3c0d4b8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2b8fd3c0d7f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b8fd3c26818" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8fd3c26818"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8fd3c34020" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3c34020"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b8fd3c34340" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2b8fd3c34678" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b8fd3d84d90" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8fd3d84d90"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8fd3d814e8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3d814e8"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b8fd3d81808" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b8fd3d90938" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8fd3d90938"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8fd3d8d0a8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3d8d0a8"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b8fd3d8d3c8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b8fd3db9020" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b8fd3db9020"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b8fd3db9788" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b8fd3db9788"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b8fd3db9b50" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b8fd3db9b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b8fd3db8348" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b8fd3db8348"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b8fd3db86f0" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b8fd3db8e80" loc="60:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b8fd3db8e80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b8fd3dc0dd8" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b8fd3dc0dd8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b8fd3de25a8" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b8fd3de25a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b8fd3de2970" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b8fd3de2970"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b8fd3de1110" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b8fd3de1110"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b8fd3de14b8" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8fd3e28338" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8fd3e28338"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8fd3e45020" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8fd3e45020"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b8fd3e45330" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TestCaseC" loc="44:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
        <short>&#10; Entry point configuration that creates new TUnit test cases&#10; </short>
        <long>&#10; Entry point configuration that creates new TUnit test cases&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b8fd400a0c8" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b8fd402b020" loc="43:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b8fd404e2a8" loc="45:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMReceiverC" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b8fd4473950" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x2b8fd4528d58" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b8fd4525108" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b8fd4525470" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="1" name="Timer" ref="0x2b8fd3e9e128" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TestChargerMonitorC.TestTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8fd3e9e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd3e9a5f0"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3e9da48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8fd3e9c8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8fd3e9c470"/>
        <function-ref name="getdt" scoped="" ref="0x2b8fd3e99020"/>
        <function-ref name="gett0" scoped="" ref="0x2b8fd3e9aa40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd3e9c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8fd3e9ec70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8fd3e9a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8fd3e9d158"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3e9d5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b8fd3bf44d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b8fd3bf44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd3bf0768"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3bf3e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8fd3bf2b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8fd3bf2728"/>
        <function-ref name="getdt" scoped="" ref="0x2b8fd3bef088"/>
        <function-ref name="gett0" scoped="" ref="0x2b8fd3bf0bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd3bf22d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8fd3bf3088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8fd3bf0198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8fd3bf3528"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3bf39c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b8fd3e151a8" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8fd3e151a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd3e13918"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3e14980"/>
        <function-ref name="startAt" scoped="" ref="0x2b8fd3e13310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd3e14e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8fd3e13da0"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3e14020"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3e144f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b8fd46a1678" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8fd46a1678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b8fd3bf5338"/>
            <typename><typedef-ref name="T62khz" ref="0x2b8fd3bf5620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd469fcc0"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd46a0d50"/>
        <function-ref name="startAt" scoped="" ref="0x2b8fd469f6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd469f230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8fd469d190"/>
        <function-ref name="start" scoped="" ref="0x2b8fd46a03f0"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd46a08c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b8fd46c1368" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b8fd46c1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd46bd580"/>
        <function-ref name="test" scoped="" ref="0x2b8fd46c0e08"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd46c0980"/>
        <function-ref name="force" scoped="" ref="0x2b8fd46bc020"/>
        <function-ref name="get" scoped="" ref="0x2b8fd46c0020"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd46bf310"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd46bda58"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd46bd0f8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd46c04a8"/>
        <function-ref name="start" scoped="" ref="0x2b8fd46bf798"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd46bfc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b8fd46ca5a0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8fd46ca5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b8fd3bf5338"/>
            <typename><typedef-ref name="T62khz" ref="0x2b8fd3bf5620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd46c7c88"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd46c9d08"/>
        <function-ref name="startAt" scoped="" ref="0x2b8fd46c7680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd46c71f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8fd46c6150"/>
        <function-ref name="start" scoped="" ref="0x2b8fd46c93a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd46c9880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b8fd46c6690" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd46c6690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd46c3930"/>
        <function-ref name="test" scoped="" ref="0x2b8fd46c41f8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd46c53a8"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd46c4680"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd46c3e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd46c5d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd46c34a8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd46c5830"/>
        <function-ref name="start" scoped="" ref="0x2b8fd46c4b08"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd46c3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b8fd46e5ab0" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b8fd46e5ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd46e1b80"/>
        <function-ref name="test" scoped="" ref="0x2b8fd46e24a8"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd46e2020"/>
        <function-ref name="force" scoped="" ref="0x2b8fd46e0510"/>
        <function-ref name="get" scoped="" ref="0x2b8fd46e4658"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd46e2930"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd46e0088"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd46e16f8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd46e4ae0"/>
        <function-ref name="start" scoped="" ref="0x2b8fd46e2db8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd46e1270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b8fd46eeca8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8fd46eeca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b8fd3bf5338"/>
            <typename><typedef-ref name="T62khz" ref="0x2b8fd3bf5620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd46ea410"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd46ec4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b8fd46ecdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd46ec930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8fd46ea898"/>
        <function-ref name="start" scoped="" ref="0x2b8fd46eda28"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd46ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd46ee500" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd46ee500"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b8fd3a01b30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b8fd3a01b30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd46ee850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b8fd46eadd8" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd46eadd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd46e50f8"/>
        <function-ref name="test" scoped="" ref="0x2b8fd46e8980"/>
        <function-ref name="get" scoped="" ref="0x2b8fd46e9a18"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd46e8e08"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd46e55d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd46e84f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd46e6c20"/>
        <function-ref name="set" scoped="" ref="0x2b8fd46e8020"/>
        <function-ref name="start" scoped="" ref="0x2b8fd46e6310"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd46e6798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd3c6c5e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd3c6c5e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b8fd3a01b30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b8fd3a01b30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3c6c938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2b8fd3c6b3a0" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2b8fd3c6b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3c6b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2b8fd3c6ccd0" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2b8fd3c6ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3c6b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x2b8fd3c66020" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x2b8fd3c66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3c66370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd3c68530" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd3c68530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3c68880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2b8fd3c67988" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2b8fd3c67988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3c67cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b8fd3c68c38" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b8fd3c68c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3c67020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2b8fd3c67338" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2b8fd3c67338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3c67688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd3c7cca8" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd3c7cca8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b8fd3a01b30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b8fd3a01b30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3c7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b8fd3c89ce0" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8fd3c89ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b8fd3c7a0a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b8fd3c7a228"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b8fd3c7a3b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b8fd3c7a538"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b8fd3c7a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x2b8fd3c98020" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x2b8fd3c98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3c98370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd3cbd060" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd3cbd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd3cb9270"/>
        <function-ref name="test" scoped="" ref="0x2b8fd3cbca20"/>
        <function-ref name="get" scoped="" ref="0x2b8fd3cbdbe0"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd3cbb020"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd3cb9748"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd3cbc598"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd3cbbdb8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd3cbc0c0"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3cbb4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3cbb930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2b8fd3cd1768" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2b8fd3cd1768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd3ccf930"/>
        <function-ref name="test" scoped="" ref="0x2b8fd3cd01f8"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3cc5d08"/>
        <function-ref name="get" scoped="" ref="0x2b8fd3cc53a8"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd3cd0680"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd3ccfe08"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd3ccf4a8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd3cc5830"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3cd0b08"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3ccf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b8fd3cb82c8" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b8fd3cb82c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd3cb44a8"/>
        <function-ref name="test" scoped="" ref="0x2b8fd3cb7c70"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3cb77e8"/>
        <function-ref name="force" scoped="" ref="0x2b8fd3cb4e08"/>
        <function-ref name="get" scoped="" ref="0x2b8fd3cb8e48"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd3cb5130"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd3cb4980"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd3cb4020"/>
        <function-ref name="set" scoped="" ref="0x2b8fd3cb7310"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3cb55b8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3cb5a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b8fd3cdce60" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b8fd3cdce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd3cd70f8"/>
        <function-ref name="test" scoped="" ref="0x2b8fd3cd9980"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3cd94f8"/>
        <function-ref name="force" scoped="" ref="0x2b8fd3cd7a58"/>
        <function-ref name="get" scoped="" ref="0x2b8fd3cdba18"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd3cd9e08"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd3cd75d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd3cd8c20"/>
        <function-ref name="set" scoped="" ref="0x2b8fd3cd9020"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3cd8310"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3cd8798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b8fd3cf2020" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b8fd3cf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b8fd3cf2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b8fd3cd5118" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b8fd3cd5118"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd3cd2270"/>
        <function-ref name="test" scoped="" ref="0x2b8fd3cd4ab0"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3cd4628"/>
        <function-ref name="force" scoped="" ref="0x2b8fd3cd2bd0"/>
        <function-ref name="get" scoped="" ref="0x2b8fd3cd5c98"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd3cd3020"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd3cd2748"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd3cd3db8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd3cd4150"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3cd34a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3cd3930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd3ccb1d8" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd3ccb1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd3cdc310"/>
        <function-ref name="test" scoped="" ref="0x2b8fd3cc9b90"/>
        <function-ref name="get" scoped="" ref="0x2b8fd3ccbd58"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd3cc8088"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd3cdc7e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd3cc9708"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd3cc8e20"/>
        <function-ref name="set" scoped="" ref="0x2b8fd3cc9230"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3cc8510"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3cc8998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b8fd3cf26e0" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b8fd3cf26e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b8fd3cf2a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2b8fd3ce1370" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2b8fd3ce1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd3cdd580"/>
        <function-ref name="test" scoped="" ref="0x2b8fd3ce0e08"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3ce0980"/>
        <function-ref name="get" scoped="" ref="0x2b8fd3ce0020"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd3cdf310"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd3cdda58"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd3cdd0f8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd3ce04a8"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3cdf798"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3cdfc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b8fd3ce6278" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b8fd3ce6278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd3ce2310"/>
        <function-ref name="test" scoped="" ref="0x2b8fd3ce5c10"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3ce5788"/>
        <function-ref name="force" scoped="" ref="0x2b8fd3ce2c70"/>
        <function-ref name="get" scoped="" ref="0x2b8fd3ce6df8"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd3ce40c0"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd3ce27e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd3ce4e58"/>
        <function-ref name="set" scoped="" ref="0x2b8fd3ce52b0"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3ce4548"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3ce49d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b8fd3ba32b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b8fd3ba32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b8fd3ba3600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8fd3ba8468" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8fd3ba8468"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8fd3ba87b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8fd3ba8940"/>
        <function-ref name="led1On" scoped="" ref="0x2b8fd3ba8ac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8fd3ba8c50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8fd3ba8dd8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd3ba7020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8fd3ba71a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8fd3ba77c8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd3ba7330"/>
        <function-ref name="led0On" scoped="" ref="0x2b8fd3ba74b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8fd3ba7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b8fd3a30ca0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b8fd3a30ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b8fd3b99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b8fd3ba50f0" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b8fd3ba50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b8fd3ba5440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd3d72108" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd3d72108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b8fd3bf5338"/>
            <typename><typedef-ref name="T62khz" ref="0x2b8fd3bf5620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd3d72e58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd3d71798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd3d71310"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd3d71c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd3d82b18" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd3d82b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b8fd3bf5338"/>
            <typename><typedef-ref name="T62khz" ref="0x2b8fd3bf5620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd3da08f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd3db6230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd3da0d80"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd3db66b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b8fd3db6bf8" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd3db6bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd3db2db8"/>
        <function-ref name="test" scoped="" ref="0x2b8fd3db45b8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd3db57a0"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd3db4a40"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd3db12f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd3db4130"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd3db2930"/>
        <function-ref name="set" scoped="" ref="0x2b8fd3db5c28"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3db2020"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3db24a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd4702108" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd4702108"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b8fd3a01b30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b8fd3a01b30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd4702458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd47028b0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd47028b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b8fd3bf5338"/>
            <typename><typedef-ref name="T62khz" ref="0x2b8fd3bf5620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd4701660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd4700020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd4701ae8"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd47004a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b8fd47009e8" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd47009e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd46fcb80"/>
        <function-ref name="test" scoped="" ref="0x2b8fd46fd4a8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd46fe598"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd46fd930"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd46fa088"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd46fd020"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd46fc6f8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd46fea20"/>
        <function-ref name="start" scoped="" ref="0x2b8fd46fddb8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd46fc270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd3dc2b40" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd3dc2b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd3dbf8f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd3dbe230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd3dbfd80"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd3dbe6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b8fd3dd0b10" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b8fd3dd0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b8fd3bf5338"/>
            <typename><typedef-ref name="T62khz" ref="0x2b8fd3bf5620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd3de88f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd3de7230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd3de8d80"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd3de76b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd3dba878" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd3dba878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd3dd1660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd3dd0020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd3dd1ae8"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd3dd04a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b8fd469b2f0" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8fd469b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd4699928"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd469a9e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b8fd4699320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd469ae70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8fd4699db0"/>
        <function-ref name="start" scoped="" ref="0x2b8fd469a088"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd469a560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b8fd4695688" loc="73:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b8fd4695688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b8fd3bf5338"/>
            <typename><typedef-ref name="T62khz" ref="0x2b8fd3bf5620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd4693cc0"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd4694d60"/>
        <function-ref name="startAt" scoped="" ref="0x2b8fd46936b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd4693230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8fd46d0190"/>
        <function-ref name="start" scoped="" ref="0x2b8fd4694400"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd46948d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b8fd4698410" loc="68:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd4698410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd4696190"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd4696aa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd4696618"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd4695020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b8fd3e4a5e8" loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b8fd3e4a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd3e4a938"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd3e4aac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b8fd3e4e648" loc="49:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8fd3e4e648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd3e4bcc0"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3e4cd50"/>
        <function-ref name="startAt" scoped="" ref="0x2b8fd3e4b6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd3e4b230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8fd3e4a190"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3e4c3f0"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3e4c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8fd3e39290" loc="48:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8fd3e39290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd3e4f5f0"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3e38ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8fd3e508c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8fd3e50470"/>
        <function-ref name="getdt" scoped="" ref="0x2b8fd3e4e020"/>
        <function-ref name="gett0" scoped="" ref="0x2b8fd3e4fa40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd3e50020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8fd3e39dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8fd3e4f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8fd3e382b8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3e38758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b8fd3ea1020" loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b8fd3ea1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd3ea1370"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd3ea14f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b8fd3e8ce80" loc="49:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b8fd3e8ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd3ea3238"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3e89910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8fd3ea4648"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8fd3ea41f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b8fd3ea3ad8"/>
        <function-ref name="gett0" scoped="" ref="0x2b8fd3ea3688"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd3e89d60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8fd3e8b9f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8fd3ea4c18"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8fd3e89020"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3e894c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8fd3e92af8" loc="48:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8fd3e92af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd3e8c020"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd3e8f530"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8fd3e8e2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8fd3e8fe10"/>
        <function-ref name="getdt" scoped="" ref="0x2b8fd3e8c900"/>
        <function-ref name="gett0" scoped="" ref="0x2b8fd3e8c490"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd3e8f9a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8fd3e916f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8fd3e8e8c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8fd3e91bb0"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3e8f0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDownOneTime" ref="0x2b8fd4597ae0" loc="50:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.ChargingLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd4597ae0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4597e30"/>
        <function-ref name="done" scoped="" ref="0x2b8fd4596020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDown" ref="0x2b8fd4597210" loc="49:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.ChargingLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDown" scoped="" ref="0x2b8fd4597210"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4597560"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45976e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TestCase" ref="0x2b8fd3eb26c8" loc="46:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.ChargingLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TestCase" scoped="" ref="0x2b8fd3eb26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd3eb2a18"/>
        <function-ref name="done" scoped="" ref="0x2b8fd3eb2ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUp" ref="0x2b8fd45988f0" loc="48:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.ChargingLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUp" scoped="" ref="0x2b8fd45988f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4598c40"/>
        <function-ref name="done" scoped="" ref="0x2b8fd4598dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUpOneTime" ref="0x2b8fd4598020" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.ChargingLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd4598020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4598370"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45984f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="waitForSendDone" ref="0x2b8fd3ee5cf8" loc="132:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="waitForSendDone" scoped="" ref="0x2b8fd3ee5cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd3ee40a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd3ee4228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDownOneTime" ref="0x2b8fd3eb3288" loc="79:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd3eb3288"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd3eb35d8"/>
        <function-ref name="done" scoped="" ref="0x2b8fd3eb3760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="begin" ref="0x2b8fd3ee7d50" loc="131:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="begin" scoped="" ref="0x2b8fd3ee7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd3ee50d8"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd3ee5260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x2b8fd3edaae8" loc="88:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2b8fd3edaae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8fd3edae38"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8fd3ed5020"/>
        <function-ref name="isState" scoped="" ref="0x2b8fd3ed51a8"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd3ed5330"/>
        <function-ref name="requestState" scoped="" ref="0x2b8fd3ed54b8"/>
        <function-ref name="forceState" scoped="" ref="0x2b8fd3ed5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDown" ref="0x2b8fd3eb4580" loc="78:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDown" scoped="" ref="0x2b8fd3eb4580"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd3eb48d0"/>
        <function-ref name="done" scoped="" ref="0x2b8fd3eb4a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b8fd3eead68" loc="90:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b8fd3eead68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b8fd3ed31e8"/>
        <function-ref name="changed" scoped="" ref="0x2b8fd3ed3370"/>
        <function-ref name="amGroup" scoped="" ref="0x2b8fd3ed34f8"/>
        <function-ref name="setAddress" scoped="" ref="0x2b8fd3ed3680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TestCase" ref="0x2b8fd3eb6020" loc="75:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TestCase" scoped="" ref="0x2b8fd3eb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd3eb6370"/>
        <function-ref name="done" scoped="" ref="0x2b8fd3eb64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd3eb83d8" loc="74:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd3eb83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3eb8728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TUnitProcessing" ref="0x2b8fd3edd968" loc="81:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TUnitProcessing" scoped="" ref="0x2b8fd3edd968"/></type-interface>
      <instance>
        <interfacedef-ref qname="TUnitProcessing"/>
      </instance>
      <interface-functions>
        <function-ref name="testResultIsAboveFailed" scoped="" ref="0x2b8fd3eddcb8"/>
        <function-ref name="testEqualsFailed" scoped="" ref="0x2b8fd3edde40"/>
        <function-ref name="tearDownOneTime" scoped="" ref="0x2b8fd3ece020"/>
        <function-ref name="testResultIsBelowFailed" scoped="" ref="0x2b8fd3ece1a8"/>
        <function-ref name="testFailed" scoped="" ref="0x2b8fd3ece330"/>
        <function-ref name="testNotEqualsFailed" scoped="" ref="0x2b8fd3ece4b8"/>
        <function-ref name="testSuccess" scoped="" ref="0x2b8fd3ece640"/>
        <function-ref name="allDone" scoped="" ref="0x2b8fd3ece7c8"/>
        <function-ref name="pong" scoped="" ref="0x2b8fd3ece950"/>
        <function-ref name="run" scoped="" ref="0x2b8fd3ecead8"/>
        <function-ref name="ping" scoped="" ref="0x2b8fd3ecec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TestState" ref="0x2b8fd3edbc70" loc="87:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TestState" scoped="" ref="0x2b8fd3edbc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8fd3eda020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8fd3eda1a8"/>
        <function-ref name="isState" scoped="" ref="0x2b8fd3eda330"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd3eda4b8"/>
        <function-ref name="requestState" scoped="" ref="0x2b8fd3eda640"/>
        <function-ref name="forceState" scoped="" ref="0x2b8fd3eda7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="runDone" ref="0x2b8fd3ee4b38" loc="133:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="runDone" scoped="" ref="0x2b8fd3ee4b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd3ee3020"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd3ee31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSplitControl" ref="0x2b8fd3ed0998" loc="89:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSplitControl" scoped="" ref="0x2b8fd3ed0998"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8fd3ed0ce8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8fd3ed0e70"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3ed4020"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3ed41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8fd3ed38f8" loc="91:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8fd3ed38f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8fd3ed3c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8fd3ed3dd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b8fd3eec020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8fd3eec1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8fd3eec330"/>
        <function-ref name="get" scoped="" ref="0x2b8fd3eec4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8fd3eec640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8fd3eecc60"/>
        <function-ref name="set" scoped="" ref="0x2b8fd3eec7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8fd3eec950"/>
        <function-ref name="led2On" scoped="" ref="0x2b8fd3eecad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TUnitState" ref="0x2b8fd3ed6e10" loc="86:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TUnitState" scoped="" ref="0x2b8fd3ed6e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8fd3edb1a8"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8fd3edb330"/>
        <function-ref name="isState" scoped="" ref="0x2b8fd3edb4b8"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd3edb640"/>
        <function-ref name="requestState" scoped="" ref="0x2b8fd3edb7c8"/>
        <function-ref name="forceState" scoped="" ref="0x2b8fd3edb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUp" ref="0x2b8fd3eb5900" loc="77:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUp" scoped="" ref="0x2b8fd3eb5900"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd3eb5c50"/>
        <function-ref name="done" scoped="" ref="0x2b8fd3eb5dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUpOneTime" ref="0x2b8fd3eb6c98" loc="76:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd3eb6c98"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd3eb5020"/>
        <function-ref name="done" scoped="" ref="0x2b8fd3eb51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StatsQuery" ref="0x2b8fd3ecdca0" loc="82:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitP.nc">
      <component-ref qname="TUnitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StatsQuery" scoped="" ref="0x2b8fd3ecdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StatsQuery"/>
      </instance>
      <interface-functions>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd3edc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b8fd3f62398" loc="58:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b8fd3f62398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3f626e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b8fd3f63ba0" loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b8fd3f63ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b8fd3f62020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b8fd3f5dba8" loc="48:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b8fd3f5dba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3f5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd3f5e170" loc="39:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd3f5e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3f5e4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b8fd3f5e7c0" loc="42:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8fd3f5e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b8fd3f5eb10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b8fd3f5ec98"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b8fd3f5ee20"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b8fd3f5d020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b8fd3f5d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b8fd3f5d558" loc="47:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2b8fd3f5d558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3f5d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b8fd3f570a8" loc="45:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b8fd3f570a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3f573f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd3f59c70" loc="39:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd3f59c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3f58020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b8fd3f58a00" loc="44:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2b8fd3f58a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3f58d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x2b8fd3f583a0" loc="43:/opt/tinyos-2.x/tos/platforms/spensamote/new/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x2b8fd3f583a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3f586f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b8fd3f6b560" loc="60:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b8fd3f6b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3f6b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b8fd3f5fe18" loc="57:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b8fd3f5fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b8fd3f6c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b8fd3f6ce68" loc="59:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b8fd3f6ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3f6b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b8fd3f6c490" loc="58:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b8fd3f6c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3f6c7e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b8fd3f6c968"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b8fd3f6caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b8fd39fc1c8" loc="48:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd39fc1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd39fc518"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd39fc6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b8fd3a8a6d0" loc="47:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b8fd3a8a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3a8aa20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b8fd3a8aba8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b8fd3a8ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b8fd3b87c58" loc="56:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b8fd3b87c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd3b86020"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd3b861a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b8fd3b82168" loc="57:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b8fd3b82168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b8fd3b824b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b8fd3b88df8" loc="55:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b8fd3b88df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd3b87170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b8fd3b872f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b8fd3b87480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b8fd3fad888" loc="40:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingC.nc">
      <component-ref qname="Link_TUnitProcessingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2b8fd3fad888"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8fd3fadbd8"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8fd3fadd60"/>
        <function-ref name="isState" scoped="" ref="0x2b8fd3fac020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd3fac1a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b8fd3fac330"/>
        <function-ref name="forceState" scoped="" ref="0x2b8fd3fac4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TUnitProcessing" ref="0x2b8fd3fac818" loc="44:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingC.nc">
      <component-ref qname="Link_TUnitProcessingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TUnitProcessing" scoped="" ref="0x2b8fd3fac818"/></type-interface>
      <instance>
        <interfacedef-ref qname="TUnitProcessing"/>
      </instance>
      <interface-functions>
        <function-ref name="testResultIsAboveFailed" scoped="" ref="0x2b8fd3facb68"/>
        <function-ref name="testEqualsFailed" scoped="" ref="0x2b8fd3faccf0"/>
        <function-ref name="tearDownOneTime" scoped="" ref="0x2b8fd3face78"/>
        <function-ref name="testResultIsBelowFailed" scoped="" ref="0x2b8fd3fab030"/>
        <function-ref name="testFailed" scoped="" ref="0x2b8fd3fab1b8"/>
        <function-ref name="testNotEqualsFailed" scoped="" ref="0x2b8fd3fab340"/>
        <function-ref name="testSuccess" scoped="" ref="0x2b8fd3fab4c8"/>
        <function-ref name="allDone" scoped="" ref="0x2b8fd3fab650"/>
        <function-ref name="pong" scoped="" ref="0x2b8fd3fab7d8"/>
        <function-ref name="run" scoped="" ref="0x2b8fd3fab960"/>
        <function-ref name="ping" scoped="" ref="0x2b8fd3fabae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialEventSend" ref="0x2b8fd3fbbc00" loc="44:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingP.nc">
      <component-ref qname="Link_TUnitProcessingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialEventSend" scoped="" ref="0x2b8fd3fbbc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd3fc5020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd3fc51a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd3fc5330"/>
        <function-ref name="cancel" scoped="" ref="0x2b8fd3fc54b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd3fc5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b8fd3fa6020" loc="43:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingP.nc">
      <component-ref qname="Link_TUnitProcessingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b8fd3fa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b8fd3fa6370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialState" ref="0x2b8fd3fc47e8" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingP.nc">
      <component-ref qname="Link_TUnitProcessingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialState" scoped="" ref="0x2b8fd3fc47e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8fd3fc4b38"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8fd3fc4cc0"/>
        <function-ref name="isState" scoped="" ref="0x2b8fd3fc4e48"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd3fbc020"/>
        <function-ref name="requestState" scoped="" ref="0x2b8fd3fbc1a8"/>
        <function-ref name="forceState" scoped="" ref="0x2b8fd3fbc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x2b8fd3fbc650" loc="48:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingP.nc">
      <component-ref qname="Link_TUnitProcessingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2b8fd3fbc650"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8fd3fbc9a0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8fd3fbcb28"/>
        <function-ref name="isState" scoped="" ref="0x2b8fd3fbccb0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd3fbce38"/>
        <function-ref name="requestState" scoped="" ref="0x2b8fd3fb6020"/>
        <function-ref name="forceState" scoped="" ref="0x2b8fd3fb61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TUnitProcessing" ref="0x2b8fd3faa848" loc="41:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingP.nc">
      <component-ref qname="Link_TUnitProcessingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TUnitProcessing" scoped="" ref="0x2b8fd3faa848"/></type-interface>
      <instance>
        <interfacedef-ref qname="TUnitProcessing"/>
      </instance>
      <interface-functions>
        <function-ref name="testResultIsAboveFailed" scoped="" ref="0x2b8fd3faab98"/>
        <function-ref name="testEqualsFailed" scoped="" ref="0x2b8fd3faad20"/>
        <function-ref name="tearDownOneTime" scoped="" ref="0x2b8fd3fa7020"/>
        <function-ref name="testResultIsBelowFailed" scoped="" ref="0x2b8fd3fa71a8"/>
        <function-ref name="testFailed" scoped="" ref="0x2b8fd3fa7330"/>
        <function-ref name="testNotEqualsFailed" scoped="" ref="0x2b8fd3fa74b8"/>
        <function-ref name="testSuccess" scoped="" ref="0x2b8fd3fa7640"/>
        <function-ref name="allDone" scoped="" ref="0x2b8fd3fa77c8"/>
        <function-ref name="pong" scoped="" ref="0x2b8fd3fa7950"/>
        <function-ref name="run" scoped="" ref="0x2b8fd3fa7ad8"/>
        <function-ref name="ping" scoped="" ref="0x2b8fd3fa7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x2b8fd3fd5598" loc="45:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingP.nc">
      <component-ref qname="Link_TUnitProcessingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x2b8fd3fd5598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8fd3fd58e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSplitControl" ref="0x2b8fd3fd5ca8" loc="46:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingP.nc">
      <component-ref qname="Link_TUnitProcessingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSplitControl" scoped="" ref="0x2b8fd3fd5ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8fd3fc4020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8fd3fc41a8"/>
        <function-ref name="start" scoped="" ref="0x2b8fd3fc4330"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd3fc44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendEventMsg" ref="0x2b8fd3fd1960" loc="85:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingP.nc">
      <component-ref qname="Link_TUnitProcessingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendEventMsg" scoped="" ref="0x2b8fd3fd1960"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd3fd1cb0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd3fd1e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="allDone" ref="0x2b8fd3fd07a8" loc="86:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/Link_TUnitProcessingP.nc">
      <component-ref qname="Link_TUnitProcessingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="allDone" scoped="" ref="0x2b8fd3fd07a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd3fd0af8"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd3fd0c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8fd4446800" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="Link_TUnitProcessingC.SerialEventSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8fd4446800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd4446b50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd4446cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd4446e60"/>
        <function-ref name="cancel" scoped="" ref="0x2b8fd4478020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd44781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8fd44783f0" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="Link_TUnitProcessingC.SerialEventSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8fd44783f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8fd4478740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8fd44788c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd4478a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd4478bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8fd4478d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8fd4477020" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="Link_TUnitProcessingC.SerialEventSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8fd4477020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8fd4477370"/>
        <function-ref name="source" scoped="" ref="0x2b8fd44774f8"/>
        <function-ref name="address" scoped="" ref="0x2b8fd4477680"/>
        <function-ref name="destination" scoped="" ref="0x2b8fd4477808"/>
        <function-ref name="setSource" scoped="" ref="0x2b8fd4477990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8fd4477b18"/>
        <function-ref name="type" scoped="" ref="0x2b8fd4477ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b8fd4477e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8fd4476020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8fd44761a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8fd4476330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b8fd44765b8" loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="Link_TUnitProcessingC.SerialEventSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b8fd44765b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8fd4476908"/>
        <function-ref name="noAck" scoped="" ref="0x2b8fd4476a90"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8fd4476c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8fd47530e0" loc="44:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Link_TUnitProcessingC.SerialEventSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8fd47530e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd4753430"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd47535b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd4753740"/>
        <function-ref name="cancel" scoped="" ref="0x2b8fd47538c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd4753a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b8fd4753cf8" loc="46:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Link_TUnitProcessingC.SerialEventSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8fd4753cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd47510a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd4751228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd47513b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8fd4751538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd47516c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b8fd4751908" loc="47:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="Link_TUnitProcessingC.SerialEventSendC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8fd4751908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8fd4751c58"/>
        <function-ref name="source" scoped="" ref="0x2b8fd4751de0"/>
        <function-ref name="address" scoped="" ref="0x2b8fd4750020"/>
        <function-ref name="destination" scoped="" ref="0x2b8fd47501a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8fd4750330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8fd47504b8"/>
        <function-ref name="type" scoped="" ref="0x2b8fd4750640"/>
        <function-ref name="setType" scoped="" ref="0x2b8fd47507c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8fd4750950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8fd4750ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8fd4750c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8fd4052020" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8fd4052020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd4052370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd40524f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd4052680"/>
        <function-ref name="cancel" scoped="" ref="0x2b8fd4052808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd4052990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b8fd409a060" loc="48:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8fd409a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd409a3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd409a558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd409a6e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8fd409a868"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd409a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8fd409b2c8" loc="46:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8fd409b2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd409b638"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd409b7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd409b948"/>
        <function-ref name="cancel" scoped="" ref="0x2b8fd409bad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd409bc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b8fd4098268" loc="50:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8fd4098268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8fd40985b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8fd4098740"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd40988c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd4098a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8fd4098bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b8fd4097020" loc="169:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b8fd4097020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd4097370"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd40974f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b8fd40977c0" loc="126:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b8fd40977c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd4097b10"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd4097c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b8fd409ac38" loc="49:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8fd409ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8fd4099020"/>
        <function-ref name="source" scoped="" ref="0x2b8fd40991a8"/>
        <function-ref name="address" scoped="" ref="0x2b8fd4099330"/>
        <function-ref name="destination" scoped="" ref="0x2b8fd40994b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8fd4099640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8fd40997c8"/>
        <function-ref name="type" scoped="" ref="0x2b8fd4099950"/>
        <function-ref name="setType" scoped="" ref="0x2b8fd4099ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8fd4099c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8fd4099de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8fd4098020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8fd40b8a98" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8fd40b8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8fd40b8de8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8fd40b5020"/>
        <function-ref name="start" scoped="" ref="0x2b8fd40b51a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd40b5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8fd40b5aa8" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8fd40b5aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd40b5df8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd40b4020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd40b41a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b8fd40b4330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd40b44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8fd40b32a8" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8fd40b32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8fd40b35f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8fd40b3780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd40b3908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd40b3a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8fd40b3c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8fd40b4c38" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8fd40b4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8fd40b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8fd40b0020" loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8fd40b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8fd40b0370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8fd40b04f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8fd40b0680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8fd40b0808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8fd40b0990"/>
        <function-ref name="get" scoped="" ref="0x2b8fd40b0b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8fd40b0ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8fd40af330"/>
        <function-ref name="set" scoped="" ref="0x2b8fd40b0e28"/>
        <function-ref name="led0On" scoped="" ref="0x2b8fd40af020"/>
        <function-ref name="led2On" scoped="" ref="0x2b8fd40af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b8fd40b1658" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8fd40b1658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8fd40b19a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b8fd40b1b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8fd40b1cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8fd40b2020" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8fd40b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8fd40b2370"/>
        <function-ref name="source" scoped="" ref="0x2b8fd40b24f8"/>
        <function-ref name="address" scoped="" ref="0x2b8fd40b2680"/>
        <function-ref name="destination" scoped="" ref="0x2b8fd40b2808"/>
        <function-ref name="setSource" scoped="" ref="0x2b8fd40b2990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8fd40b2b18"/>
        <function-ref name="type" scoped="" ref="0x2b8fd40b2ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b8fd40b2e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8fd40b1020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8fd40b11a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8fd40b1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b8fd4112308" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b8fd4112308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd4112658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd41127e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd4112968"/>
        <function-ref name="cancel" scoped="" ref="0x2b8fd4112af0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd4112c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b8fd4111020" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b8fd4111020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8fd4111370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8fd40ad460" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8fd40ad460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd40ad7d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd40ad958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd40adae0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8fd40adc68"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd40addf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8fd4115d20" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8fd4115d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8fd41140a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8fd4114228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd41143b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd4114538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8fd41146c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8fd4116180" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8fd4116180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8fd41164f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b8fd4114908" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8fd4114908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8fd4114c58"/>
        <function-ref name="noAck" scoped="" ref="0x2b8fd4114de0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8fd4112020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8fd4116738" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8fd4116738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8fd4116a88"/>
        <function-ref name="source" scoped="" ref="0x2b8fd4116c10"/>
        <function-ref name="address" scoped="" ref="0x2b8fd4116d98"/>
        <function-ref name="destination" scoped="" ref="0x2b8fd4115020"/>
        <function-ref name="setSource" scoped="" ref="0x2b8fd41151a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8fd4115330"/>
        <function-ref name="type" scoped="" ref="0x2b8fd41154b8"/>
        <function-ref name="setType" scoped="" ref="0x2b8fd4115640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8fd41157c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8fd4115950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8fd4115ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8fd410d728" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8fd410d728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8fd410da78"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8fd410dc00"/>
        <function-ref name="start" scoped="" ref="0x2b8fd410dd88"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd410c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8fd410b208" loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8fd410b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b8fd3fa2cf8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd410b558"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd410b6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd410b868"/>
        <function-ref name="cancel" scoped="" ref="0x2b8fd410b9f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd410bb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd410d110" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd410d110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd410d460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8fd410c760" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8fd410c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b8fd3fa2cf8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8fd410cab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8fd41098f8" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8fd41098f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8fd4109c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8fd4109dd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b8fd4108020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8fd41081a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8fd4108330"/>
        <function-ref name="get" scoped="" ref="0x2b8fd41084b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8fd4108640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8fd4108c60"/>
        <function-ref name="set" scoped="" ref="0x2b8fd41087c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8fd4108950"/>
        <function-ref name="led2On" scoped="" ref="0x2b8fd4108ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b8fd4109020" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b8fd4109020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b8fd3fa2cf8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b8fd4109370"/>
        <function-ref name="offset" scoped="" ref="0x2b8fd41094f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b8fd4109680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8fd4132da8" loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8fd4132da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8fd4131170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8fd41312f8"/>
        <function-ref name="start" scoped="" ref="0x2b8fd4131480"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd4131608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b8fd4193dd0" loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b8fd4193dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd4191170"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd41912f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b8fd4143b00" loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b8fd4143b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd4143e50"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd4146020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b8fd41508e0" loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b8fd41508e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd4150c30"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd4150db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd4132790" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd4132790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd4132ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b8fd4141608" loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b8fd4141608"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b8fd4141958"/>
        <function-ref name="flush" scoped="" ref="0x2b8fd4141ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b8fd4195590" loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b8fd4195590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd41958e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd4195a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b8fd4148b38" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b8fd4148b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b8fd412a020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b8fd412a1a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b8fd412a330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b8fd412a4b8"/>
        <function-ref name="putData" scoped="" ref="0x2b8fd412a640"/>
        <function-ref name="putDone" scoped="" ref="0x2b8fd412a7c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b8fd412a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8fd412abc8" loc="73:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8fd412abc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8fd414d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8fd414d1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8fd414d330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8fd414d4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8fd414d640"/>
        <function-ref name="get" scoped="" ref="0x2b8fd414d7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8fd414d950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8fd4147020"/>
        <function-ref name="set" scoped="" ref="0x2b8fd414dad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8fd414dc60"/>
        <function-ref name="led2On" scoped="" ref="0x2b8fd414dde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b8fd418e020" loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b8fd418e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd418e370"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd418e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b8fd412b950" loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b8fd412b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b8fd412bca0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b8fd412be28"/>
        <function-ref name="startSend" scoped="" ref="0x2b8fd4130020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b8fd41301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b8fd414eb48" loc="68:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b8fd414eb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b8fd412f020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b8fd412f1a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b8fd412f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b8fd4268908" loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b8fd4268908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd4268c58"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd4268de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8fd426c6f8" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8fd426c6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b8fd3fa2cf8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd426ca68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd426cbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd426cd78"/>
        <function-ref name="cancel" scoped="" ref="0x2b8fd426b020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd426b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b8fd4267100" loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b8fd4267100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd4267450"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd42675d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8fd426c020" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8fd426c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b8fd3fa2cf8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8fd426c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b8fd426b5b0" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b8fd426b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b8fd3fa2cf8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b8fd426b920"/>
        <function-ref name="offset" scoped="" ref="0x2b8fd426baa8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b8fd426bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8fd4269268" loc="57:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8fd4269268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8fd42695b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8fd4269740"/>
        <function-ref name="led1On" scoped="" ref="0x2b8fd42698c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8fd4269a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8fd4269bd8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4269d60"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8fd4268020"/>
        <function-ref name="led2On" scoped="" ref="0x2b8fd4268640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4268330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8fd42681a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8fd42684b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b8fd426a750" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b8fd426a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b8fd426aaa0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b8fd426ac28"/>
        <function-ref name="startSend" scoped="" ref="0x2b8fd426adb0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b8fd4269020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b8fd426be78" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b8fd426be78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b8fd426a1f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b8fd426a380"/>
        <function-ref name="endPacket" scoped="" ref="0x2b8fd426a508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b8fd4284c98" loc="50:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b8fd4284c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd4261020"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b8fd42611a8"/>
        <function-ref name="receive" scoped="" ref="0x2b8fd4261330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b8fd42614b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8fd4261640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b8fd42617c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd4261950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b8fd4263328" loc="48:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b8fd4263328"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b8fd4263678"/>
        <function-ref name="resetSend" scoped="" ref="0x2b8fd4263800"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b8fd4263988"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b8fd4263b10"/>
        <function-ref name="putData" scoped="" ref="0x2b8fd4263c98"/>
        <function-ref name="putDone" scoped="" ref="0x2b8fd4263e20"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b8fd4262020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8fd4261bc8" loc="51:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8fd4261bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8fd4260020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8fd42601a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8fd4260330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8fd42604b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8fd4260640"/>
        <function-ref name="get" scoped="" ref="0x2b8fd42607c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8fd4260950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8fd4281020"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4260ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8fd4260c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b8fd4260de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b8fd428fcc8" loc="42:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b8fd428fcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd42920a0"/>
        <function-ref name="receive" scoped="" ref="0x2b8fd4292228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b8fd4294a80" loc="41:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b8fd4294a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd4294dd0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b8fd4293020"/>
        <function-ref name="receive" scoped="" ref="0x2b8fd42931a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b8fd4293330"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8fd42934b8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b8fd4293640"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd42937c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8fd42942b8" loc="40:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8fd42942b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd4294608"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd4294790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b8fd428d5d8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b8fd428d5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd428d928"/>
        <function-ref name="receive" scoped="" ref="0x2b8fd428dab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b8fd428dda0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b8fd428dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd428b170"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b8fd428b2f8"/>
        <function-ref name="receive" scoped="" ref="0x2b8fd428b480"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b8fd428b608"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8fd428b790"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b8fd428b918"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd428baa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b8fd428a080" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd428a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc40b8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b8fd3bc4410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd428add0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd4289738"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd42892b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd4289bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8fd4292db0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8fd4292db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd428d170"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd428d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b8fd42ca0c0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b8fd42ca0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd42ca410"/>
        <function-ref name="receive" scoped="" ref="0x2b8fd42ca598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b8fd42c8790" loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b8fd42c8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd42c8ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd42c8c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd4286350" loc="48:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd4286350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd42866a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b8fd42ca820" loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b8fd42ca820"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8fd42cab70"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b8fd42cacf8"/>
        <function-ref name="receive" scoped="" ref="0x2b8fd42cae80"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b8fd42c8030"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8fd42c81b8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b8fd42c8340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8fd42c84c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b8fd42f3de8" loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd42f3de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc40b8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b8fd3bc4410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd42f2be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd42f1548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd42f10c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd42f19d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b8fd42f47c0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b8fd42f47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8fd42f4b10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b8fd42f4c98"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8fd42f4e20"/>
        <function-ref name="txDone" scoped="" ref="0x2b8fd42f3020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8fd42f31a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b8fd42f3330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8fd42f34b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b8fd42f3640"/>
        <function-ref name="tx" scoped="" ref="0x2b8fd42f37c8"/>
        <function-ref name="rx" scoped="" ref="0x2b8fd42f3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8fd4286928" loc="49:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8fd4286928"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd4286c78"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd4286e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b8fd42f4020" loc="54:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b8fd42f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd42f4370"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd42f44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b8fd4303860" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b8fd4303860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8fd4303bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b8fd4303d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8fd4302020"/>
        <function-ref name="txDone" scoped="" ref="0x2b8fd43021a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8fd4302330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b8fd43024b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8fd4302640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b8fd43027c8"/>
        <function-ref name="tx" scoped="" ref="0x2b8fd4302950"/>
        <function-ref name="rx" scoped="" ref="0x2b8fd4302ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b8fd42ff020" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b8fd42ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8fd42ff370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b8fd42ff4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8fd42ff680"/>
        <function-ref name="txDone" scoped="" ref="0x2b8fd42ff808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8fd42ff990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b8fd42ffb18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8fd42ffca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b8fd42ffe28"/>
        <function-ref name="tx" scoped="" ref="0x2b8fd42fe020"/>
        <function-ref name="rx" scoped="" ref="0x2b8fd42fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b8fd4303020" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8fd4303020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd4303370"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd43034f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b8fd4302e58" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b8fd4302e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd43001e8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd4300370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b8fd43006f0" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b8fd43006f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd4300a40"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd4300bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b8fd4304700" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8fd4304700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd4304a50"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd4304bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b8fd42fb020" loc="114:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b8fd42fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd42fb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b8fd42fa8a0" loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b8fd42fa8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8fd42fabf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b8fd42fad78"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8fd42f9020"/>
        <function-ref name="txDone" scoped="" ref="0x2b8fd42f91a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8fd42f9330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b8fd42f94b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8fd42f9640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b8fd42f97c8"/>
        <function-ref name="tx" scoped="" ref="0x2b8fd42f9950"/>
        <function-ref name="rx" scoped="" ref="0x2b8fd42f9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b8fd42f6c80" loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b8fd42f6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b8fd42f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b8fd42f9e30" loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b8fd42f9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd42f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b8fd42f76d8" loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b8fd42f76d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8fd42f7a28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b8fd42f7bb0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8fd42f7d38"/>
        <function-ref name="txDone" scoped="" ref="0x2b8fd42f6020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8fd42f61a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b8fd42f6330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8fd42f64b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b8fd42f6640"/>
        <function-ref name="tx" scoped="" ref="0x2b8fd42f67c8"/>
        <function-ref name="rx" scoped="" ref="0x2b8fd42f6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b8fd42fa020" loc="116:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8fd42fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd42fa370"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd42fa4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b8fd42f8568" loc="120:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b8fd42f8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd42f88b8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd42f8a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b8fd42f8e00" loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b8fd42f8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd42f71a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd42f7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b8fd42f5340" loc="126:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8fd42f5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b8fd42f5690"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b8fd42f5818"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b8fd42f59a0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b8fd42f5b28"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b8fd42f5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b8fd4322020" loc="127:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b8fd4322020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b8fd4322370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b8fd42fb730" loc="115:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8fd42fb730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8fd42fba80"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd42fbc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd437b528" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd437b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc40b8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b8fd3bc4410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd437a3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd437acb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd437a830"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd4378190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b8fd4373ce8" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b8fd4373ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x2b8fd3be64d0"/>
            <typename><typedef-ref name="TMcu" ref="0x2b8fd3be6b18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd4372ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd43714a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd4371020"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd4371930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd4376ac8" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd4376ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc40b8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b8fd3bc4410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd4375860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd43731f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd4375ce8"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd4373680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd436c1e0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd436c1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x2b8fd3be64d0"/>
            <typename><typedef-ref name="TMcu" ref="0x2b8fd3be6b18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd436b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd436b930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd436b4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd436bdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b8fd438c108" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b8fd438c108"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd4388270"/>
        <function-ref name="test" scoped="" ref="0x2b8fd438bab0"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd438b628"/>
        <function-ref name="get" scoped="" ref="0x2b8fd438cc88"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd4389020"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd4388748"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd4389db8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd438b150"/>
        <function-ref name="start" scoped="" ref="0x2b8fd43894a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd4389930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd436adb8" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd436adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd4394e58"/>
        <function-ref name="test" scoped="" ref="0x2b8fd4395778"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4397968"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd4395c00"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd4393360"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd43952f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd43949d0"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4397df0"/>
        <function-ref name="start" scoped="" ref="0x2b8fd43940c0"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd4394548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b8fd4392020" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b8fd4392020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd438e0f8"/>
        <function-ref name="test" scoped="" ref="0x2b8fd43909e8"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd4390560"/>
        <function-ref name="force" scoped="" ref="0x2b8fd438ea58"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4392ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd4390e70"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd438e5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd438fc30"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4390088"/>
        <function-ref name="start" scoped="" ref="0x2b8fd438f320"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd438f7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b8fd43b0700" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b8fd43b0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd43ac930"/>
        <function-ref name="test" scoped="" ref="0x2b8fd43ad1f8"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd43afd08"/>
        <function-ref name="force" scoped="" ref="0x2b8fd43ab310"/>
        <function-ref name="get" scoped="" ref="0x2b8fd43af3a8"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd43ad680"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd43ace08"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd43ac4a8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd43af830"/>
        <function-ref name="start" scoped="" ref="0x2b8fd43adb08"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd43ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b8fd43a0de0" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b8fd43a0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd439b0f8"/>
        <function-ref name="test" scoped="" ref="0x2b8fd439e980"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd439e4f8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd439fa18"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd439ee08"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd439b5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd439dc20"/>
        <function-ref name="set" scoped="" ref="0x2b8fd439e020"/>
        <function-ref name="start" scoped="" ref="0x2b8fd439d310"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd439d798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b8fd439ba50" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b8fd439ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b8fd439bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b8fd43ab988" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b8fd43ab988"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd43a7b80"/>
        <function-ref name="test" scoped="" ref="0x2b8fd43a84a8"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd43a8020"/>
        <function-ref name="force" scoped="" ref="0x2b8fd43a6510"/>
        <function-ref name="get" scoped="" ref="0x2b8fd43aa560"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd43a8930"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd43a6088"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd43a76f8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd43aa9e8"/>
        <function-ref name="start" scoped="" ref="0x2b8fd43a8db8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd43a7270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b8fd439a148" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b8fd439a148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b8fd439a498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b8fd43a6b88" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b8fd43a6b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd43a2db8"/>
        <function-ref name="test" scoped="" ref="0x2b8fd43a3580"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd43a30f8"/>
        <function-ref name="force" scoped="" ref="0x2b8fd43a0778"/>
        <function-ref name="get" scoped="" ref="0x2b8fd43a4760"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd43a3a08"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd43a02f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd43a2930"/>
        <function-ref name="set" scoped="" ref="0x2b8fd43a4be8"/>
        <function-ref name="start" scoped="" ref="0x2b8fd43a2020"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd43a24a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8fd4387a70" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8fd4387a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd4381b80"/>
        <function-ref name="test" scoped="" ref="0x2b8fd43834a8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4384658"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd4383930"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd43b0088"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd4383020"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd43816f8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4384ae0"/>
        <function-ref name="start" scoped="" ref="0x2b8fd4383db8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd4381270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd44419e0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd44419e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x2b8fd3be64d0"/>
            <typename><typedef-ref name="TMcu" ref="0x2b8fd3be6b18"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd4440768"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd443e0c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd4440bf0"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd443e548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b8fd443ea88" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd443ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd443ab80"/>
        <function-ref name="test" scoped="" ref="0x2b8fd443c4a8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd443d658"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd443c930"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd4439088"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd443c020"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd443a6f8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd443dae0"/>
        <function-ref name="start" scoped="" ref="0x2b8fd443cdb8"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd443a270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd483caf8" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd483caf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b8fd3a01b30"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b8fd3a01b30"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd483ce48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd483b2f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd483b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x2b8fd3be64d0"/>
            <typename><typedef-ref name="TMcu" ref="0x2b8fd3be6b18"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd483a088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd483a998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd483a510"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd483ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b8fd487b3c8" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b8fd487b3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b8fd4878580"/>
        <function-ref name="test" scoped="" ref="0x2b8fd487ae08"/>
        <function-ref name="get" scoped="" ref="0x2b8fd487a020"/>
        <function-ref name="reset" scoped="" ref="0x2b8fd4879310"/>
        <function-ref name="getMode" scoped="" ref="0x2b8fd4878a58"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd487a980"/>
        <function-ref name="isOn" scoped="" ref="0x2b8fd48780f8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd487a4a8"/>
        <function-ref name="start" scoped="" ref="0x2b8fd4879798"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd4879c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b8fd4433688" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b8fd4433688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x2b8fd3be64d0"/>
            <typename><typedef-ref name="TMcu" ref="0x2b8fd3be6b18"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd4432400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd4432d10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd4432888"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd44301f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8fd4436420" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8fd4436420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x2b8fd3be64d0"/>
            <typename><typedef-ref name="TMcu" ref="0x2b8fd3be6b18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8fd44341d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8fd4434ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8fd4434658"/>
        <function-ref name="overflow" scoped="" ref="0x2b8fd4433020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b8fd4458130" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b8fd4458130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b8fd4458480"/>
        <function-ref name="offset" scoped="" ref="0x2b8fd4458608"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b8fd4458790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8fd446c060" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="Link_TUnitProcessingC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8fd446c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8fd446c3b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8fd446c538"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8fd446c6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8fd446c848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8fd446c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8fd4471aa0" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="Link_TUnitProcessingC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8fd4471aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8fd4471df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8fd446cc18" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="Link_TUnitProcessingC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8fd446cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8fd446b020"/>
        <function-ref name="source" scoped="" ref="0x2b8fd446b1a8"/>
        <function-ref name="address" scoped="" ref="0x2b8fd446b330"/>
        <function-ref name="destination" scoped="" ref="0x2b8fd446b4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8fd446b640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8fd446b7c8"/>
        <function-ref name="type" scoped="" ref="0x2b8fd446b950"/>
        <function-ref name="setType" scoped="" ref="0x2b8fd446bad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8fd446bc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8fd446bde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8fd446a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b8fd4468978" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="Link_TUnitProcessingC.SerialStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b8fd4468978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8fd4468cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8fd4468e50"/>
        <function-ref name="isState" scoped="" ref="0x2b8fd445f020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd445f1a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b8fd445f330"/>
        <function-ref name="forceState" scoped="" ref="0x2b8fd445f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b8fd4463608" loc="66:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b8fd4463608"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8fd4463958"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8fd4463ae0"/>
        <function-ref name="isState" scoped="" ref="0x2b8fd4463c68"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd4463df0"/>
        <function-ref name="requestState" scoped="" ref="0x2b8fd4462020"/>
        <function-ref name="forceState" scoped="" ref="0x2b8fd44621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd44922d0" loc="66:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd44922d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd4492620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b8fd4492d90" loc="67:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b8fd4492d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8fd4491170"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8fd44912f8"/>
        <function-ref name="isState" scoped="" ref="0x2b8fd4491480"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd4491608"/>
        <function-ref name="requestState" scoped="" ref="0x2b8fd4491790"/>
        <function-ref name="forceState" scoped="" ref="0x2b8fd4491918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b8fd447b978" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="Link_TUnitProcessingC.SendStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b8fd447b978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8fd447bcc8"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8fd447be50"/>
        <function-ref name="isState" scoped="" ref="0x2b8fd447a020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd447a1a8"/>
        <function-ref name="requestState" scoped="" ref="0x2b8fd447a330"/>
        <function-ref name="forceState" scoped="" ref="0x2b8fd447a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b8fd44aaa28" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="WireTUnitC.TUnitStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b8fd44aaa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8fd44aad78"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8fd44a9020"/>
        <function-ref name="isState" scoped="" ref="0x2b8fd44a91a8"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd44a9330"/>
        <function-ref name="requestState" scoped="" ref="0x2b8fd44a94b8"/>
        <function-ref name="forceState" scoped="" ref="0x2b8fd44a9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b8fd44a8ab8" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="WireTUnitC.TestStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b8fd44a8ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b8fd44a8e08"/>
        <function-ref name="toIdle" scoped="" ref="0x2b8fd44a7020"/>
        <function-ref name="isState" scoped="" ref="0x2b8fd44a71a8"/>
        <function-ref name="isIdle" scoped="" ref="0x2b8fd44a7330"/>
        <function-ref name="requestState" scoped="" ref="0x2b8fd44a74b8"/>
        <function-ref name="forceState" scoped="" ref="0x2b8fd44a7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b8fd44a3020" loc="54:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b8fd44a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b8fd44a3370"/>
        <function-ref name="changed" scoped="" ref="0x2b8fd44a34f8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b8fd44a3680"/>
        <function-ref name="setAddress" scoped="" ref="0x2b8fd44a3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b8fd44c3250" loc="46:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8fd44c3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8fd44c35a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8fd44c3728"/>
        <function-ref name="led1On" scoped="" ref="0x2b8fd44c38b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8fd44c3a38"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8fd44c3bc0"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44c3d48"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8fd44c2020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8fd44c2640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44c21a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8fd44c2330"/>
        <function-ref name="led2On" scoped="" ref="0x2b8fd44c24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b8fd44b57c8" loc="50:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b8fd44b57c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44b5b18"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44b5ca0"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44b5e28"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44bb020"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44bb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44bb330"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44bb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44bb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8fd44bd020" loc="46:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd44bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd44bd370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b8fd44bb958" loc="51:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b8fd44bb958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44bbca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44bbe30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44ba020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44ba1a8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44ba330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44ba4b8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44ba640"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44ba7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b8fd44bd5e8" loc="47:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8fd44bd5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8fd44bd938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8fd44bdac0"/>
        <function-ref name="led1On" scoped="" ref="0x2b8fd44bdc48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8fd44bddd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8fd44bc020"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44bc1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8fd44bc330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8fd44bc950"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44bc4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8fd44bc640"/>
        <function-ref name="led2On" scoped="" ref="0x2b8fd44bc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b8fd44baae0" loc="52:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b8fd44baae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44bae30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44b4020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44b41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44b4330"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44b44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44b4640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44b47c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44b4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b8fd44ce950" loc="35:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b8fd44ce950"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44ceca0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44cee28"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44cd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44cd1a8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44cd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44cd4b8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44cd640"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44cd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b8fd44cdb20" loc="36:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b8fd44cdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44cde70"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44cc020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44cc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44cc330"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44cc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44cc640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44cc7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44cc950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b8fd44cbd90" loc="38:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8fd44cbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8fd44c9170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b8fd44ccca8" loc="37:/opt/tinyos-2.x/tos/platforms/spensamote/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b8fd44ccca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44cb020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44cb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44cb330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44cb4b8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44cb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44cb7c8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44cb950"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44cbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b8fd4530020" loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b8fd4530020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4530770"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd45308f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd4530a80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4530c08"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4530d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd452f020"/>
        <function-ref name="set" scoped="" ref="0x2b8fd452f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd452f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b8fd4515af0" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b8fd4515af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4515e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4514020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45141a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4514330"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45144b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4514640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45147c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4514950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b8fd450aaf0" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b8fd450aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd450ae40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4509020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45091a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4509330"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45094b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4509640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45097c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4509950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b8fd45017e0" loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b8fd45017e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4501b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4501cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd4501e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4500020"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45001a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4500330"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45004b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4500640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b8fd452bc78" loc="98:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b8fd452bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd452a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd452a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd452a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd452a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd452a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd452a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd452a950"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd452aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b8fd44f57e0" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b8fd44f57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44f5b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44f5cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44f5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44f4020"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44f41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44f4330"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44f44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b8fd45034d0" loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b8fd45034d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4503820"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd45039a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd4503b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4503cb8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4503e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4502020"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45021a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4502330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b8fd44f3af0" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b8fd44f3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44f3e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44f2020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44f21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44f2330"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44f24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44f2640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44f27c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44f2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b8fd44e8c78" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b8fd44e8c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44e7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44e71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44e7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44e74b8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44e7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44e77c8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44e7950"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44e7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b8fd4511020" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b8fd4511020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4511370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd45114f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd4511680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4511808"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4511990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4511b18"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4511ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4511e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b8fd4506020" loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b8fd4506020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4506370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd45064f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd4506680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4506808"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4506990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4506b18"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4506ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4506e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b8fd44fa020" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b8fd44fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44fa370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44fa4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44fa680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44fa808"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44fa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44fab18"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44faca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44fae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b8fd44ef020" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b8fd44ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44ef370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44ef4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44ef680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44ef808"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44ef990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44efb18"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44efca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44efe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b8fd44e41a0" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b8fd44e41a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44e44f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44e4678"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44e4800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44e4988"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44e4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44e4c98"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44e4e20"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b8fd450e4d0" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b8fd450e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd450e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd450e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd450eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd450ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd450ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd450d020"/>
        <function-ref name="set" scoped="" ref="0x2b8fd450d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd450d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b8fd44fdc78" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b8fd44fdc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44fc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44fc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44fc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44fc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44fc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44fc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44fc950"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44fcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b8fd452d968" loc="96:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b8fd452d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd452dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd452de40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd452c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd452c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd452c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd452c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd452c640"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd452c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b8fd450c7e0" loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b8fd450c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd450cb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd450ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd450ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd450b020"/>
        <function-ref name="get" scoped="" ref="0x2b8fd450b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd450b330"/>
        <function-ref name="set" scoped="" ref="0x2b8fd450b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd450b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b8fd44f74d0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b8fd44f74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44f7820"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44f79a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44f7b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44f7cb8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44f7e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44f6020"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44f61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44f6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b8fd44ec658" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b8fd44ec658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44ec9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44ecb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44eccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44ece40"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44eb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44eb1a8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44eb330"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44eb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b8fd452f658" loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b8fd452f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd452f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd452fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd452fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd452fe40"/>
        <function-ref name="get" scoped="" ref="0x2b8fd452e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd452e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd452e330"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd452e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b8fd44ea968" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b8fd44ea968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44eacb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44eae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44e9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44e91a8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44e9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44e94b8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44e9640"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44e97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b8fd4514c78" loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b8fd4514c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4513020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd45131a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd4513330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd45134b8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4513640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd45137c8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4513950"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4513ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b8fd4509c78" loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b8fd4509c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4508020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd45081a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd4508330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd45084b8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4508640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd45087c8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4508950"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4508ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b8fd4500968" loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b8fd4500968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4500cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4500e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44ff020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44ff1a8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44ff330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44ff4b8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44ff640"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44ff7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b8fd44f4968" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b8fd44f4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44f4cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44f4e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44f3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44f31a8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44f3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44f34b8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44f3640"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44f37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b8fd44f2c78" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b8fd44f2c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44f1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44f11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44f1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44f14b8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44f1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44f17c8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44f1950"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44f1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b8fd44e7e00" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b8fd44e7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44e61a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44e6330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44e64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44e6640"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44e67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44e6950"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44e6ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44e6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b8fd45101a0" loc="71:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b8fd45101a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45104f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4510678"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd4510800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4510988"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4510b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4510c98"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4510e20"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd450f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b8fd45051a0" loc="82:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b8fd45051a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45054f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4505678"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd4505800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4505988"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4505b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4505c98"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4505e20"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4504020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b8fd44f91a0" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b8fd44f91a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44f94f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44f9678"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44f9800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44f9988"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44f9b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44f9c98"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44f9e20"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b8fd44ee1a0" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b8fd44ee1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44ee5f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44ee778"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44ee900"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44eea88"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44eec10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44eed98"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44ed020"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b8fd44e3348" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b8fd44e3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44e3698"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44e3820"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44e39a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44e3b30"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44e3cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44e3e40"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44e1020"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b8fd44fce00" loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b8fd44fce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45311a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4531330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45314b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4531640"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45317c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4531950"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4531ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4531c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b8fd4516658" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b8fd4516658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4516ba8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4516d30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd4515020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd45151a8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4515330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd45154b8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4515640"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd45157c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b8fd450b968" loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b8fd450b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd450bcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd450be40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd450a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd450a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd450a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd450a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd450a640"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd450a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b8fd4502658" loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b8fd4502658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45029a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4502b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd4502cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4502e40"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4501020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd45011a8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4501330"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd45014b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b8fd452caf0" loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b8fd452caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd452ce40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd452b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd452b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd452b330"/>
        <function-ref name="get" scoped="" ref="0x2b8fd452b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd452b640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd452b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd452b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b8fd44f6658" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b8fd44f6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44f69a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44f6b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44f6cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44f6e40"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44f5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44f51a8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44f5330"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44f54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b8fd44eb7e0" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b8fd44eb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44ebb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44ebcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44ebe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44ea020"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44ea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44ea330"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44ea4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44ea640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b8fd4504348" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b8fd4504348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4504698"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4504820"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45049a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4504b30"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4504cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4504e40"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4503020"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd45031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b8fd44e9af0" loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b8fd44e9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44e9e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44e8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44e81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44e8330"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44e84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44e8640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44e87c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44e8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b8fd4513e00" loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b8fd4513e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45121a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4512330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45124b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4512640"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45127c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4512950"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4512ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4512c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b8fd4508e00" loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b8fd4508e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45071a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4507330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45074b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4507640"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45077c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4507950"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4507ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4507c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b8fd44ffaf0" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b8fd44ffaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44ffe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44fd020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44fd1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44fd330"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44fd4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44fd640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44fd7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44fd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b8fd44c9d70" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b8fd44c9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44fb0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44fb278"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44fb400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44fb588"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44fb710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44fb898"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44fba20"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44fbba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b8fd44f1e00" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b8fd44f1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44f01a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44f0330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44f04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44f0640"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44f07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44f0950"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44f0ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44f0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b8fd44e5020" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b8fd44e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44e5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44e54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44e5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44e5808"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44e5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44e5b18"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44e5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44e5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b8fd450f348" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b8fd450f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd450f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd450f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd450f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd450fb30"/>
        <function-ref name="get" scoped="" ref="0x2b8fd450fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd450fe40"/>
        <function-ref name="set" scoped="" ref="0x2b8fd450e020"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd450e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b8fd452e7e0" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b8fd452e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd452eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd452ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd452ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd452d020"/>
        <function-ref name="get" scoped="" ref="0x2b8fd452d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd452d330"/>
        <function-ref name="set" scoped="" ref="0x2b8fd452d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd452d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b8fd450d658" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b8fd450d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd450d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd450db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd450dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd450de40"/>
        <function-ref name="get" scoped="" ref="0x2b8fd450c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd450c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd450c330"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd450c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b8fd44e14d0" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b8fd44e14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44e1820"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44e19a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44e1b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44e1cb8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44e1e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4516020"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45161a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4516330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b8fd44f8348" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b8fd44f8348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44f8698"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44f8820"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44f89a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44f8b30"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44f8cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44f8e40"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44f7020"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b8fd44ed4d0" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b8fd44ed4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd44ed820"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd44ed9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd44edb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd44edcb8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd44ede40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd44ec020"/>
        <function-ref name="set" scoped="" ref="0x2b8fd44ec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd44ec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b8fd4526020" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b8fd4526020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4526390"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4526518"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45266a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4526828"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45269b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4526b38"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4526cc0"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4526e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b8fd453c370" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b8fd453c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd453c6e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd453c868"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd453c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd453cb78"/>
        <function-ref name="get" scoped="" ref="0x2b8fd453cd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd453b020"/>
        <function-ref name="set" scoped="" ref="0x2b8fd453b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd453b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b8fd45367c0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b8fd45367c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4536b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4536cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd4536e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4534020"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4534330"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45344b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4534640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b8fd4566a88" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b8fd4566a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4566df8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4565020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45651a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4565330"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45654b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4565640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45657c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4565950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b8fd455fd28" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b8fd455fd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd455e0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd455e260"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd455e3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd455e570"/>
        <function-ref name="get" scoped="" ref="0x2b8fd455e6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd455e880"/>
        <function-ref name="set" scoped="" ref="0x2b8fd455ea08"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd455eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b8fd4558020" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b8fd4558020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd4558390"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4558518"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45586a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4558828"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45589b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4558b38"/>
        <function-ref name="set" scoped="" ref="0x2b8fd4558cc0"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4558e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b8fd4551370" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b8fd4551370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45516e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd4551868"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45519f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd4551b78"/>
        <function-ref name="get" scoped="" ref="0x2b8fd4551d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd4550020"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45501a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd4550330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDownOneTime" ref="0x2b8fd4593ce8" loc="50:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.DoneChargingLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd4593ce8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45910a0"/>
        <function-ref name="done" scoped="" ref="0x2b8fd4591228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDown" ref="0x2b8fd4593418" loc="49:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.DoneChargingLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDown" scoped="" ref="0x2b8fd4593418"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4593768"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45938f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TestCase" ref="0x2b8fd45957f0" loc="46:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.DoneChargingLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TestCase" scoped="" ref="0x2b8fd45957f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4595b40"/>
        <function-ref name="done" scoped="" ref="0x2b8fd4595cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUp" ref="0x2b8fd45949d8" loc="48:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.DoneChargingLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUp" scoped="" ref="0x2b8fd45949d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4594d28"/>
        <function-ref name="done" scoped="" ref="0x2b8fd4593020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUpOneTime" ref="0x2b8fd4594108" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.DoneChargingLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd4594108"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4594458"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45945e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDownOneTime" ref="0x2b8fd45c5020" loc="50:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.ErrorLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd45c5020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45c5370"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45c54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDown" ref="0x2b8fd45c6620" loc="49:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.ErrorLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDown" scoped="" ref="0x2b8fd45c6620"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45c6970"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45c6af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TestCase" ref="0x2b8fd45909b8" loc="46:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.ErrorLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TestCase" scoped="" ref="0x2b8fd45909b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4590d08"/>
        <function-ref name="done" scoped="" ref="0x2b8fd458f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUp" ref="0x2b8fd458fce8" loc="48:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.ErrorLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUp" scoped="" ref="0x2b8fd458fce8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45c60a0"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45c6228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUpOneTime" ref="0x2b8fd458f418" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.ErrorLedOnC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd458f418"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd458f768"/>
        <function-ref name="done" scoped="" ref="0x2b8fd458f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDownOneTime" ref="0x2b8fd45c0080" loc="50:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.LedsOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd45c0080"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45c03d0"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45c0558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDown" ref="0x2b8fd45c2768" loc="49:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.LedsOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDown" scoped="" ref="0x2b8fd45c2768"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45c2ab8"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45c2c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TestCase" ref="0x2b8fd45c4c68" loc="46:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.LedsOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TestCase" scoped="" ref="0x2b8fd45c4c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45c3020"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUp" ref="0x2b8fd45c3e70" loc="48:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.LedsOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUp" scoped="" ref="0x2b8fd45c3e70"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45c21e8"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45c2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUpOneTime" ref="0x2b8fd45c35a0" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.LedsOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd45c35a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45c38f0"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45c3a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDownOneTime" ref="0x2b8fd45bc210" loc="50:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.DidNotStartChargeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd45bc210"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45bc560"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45bc6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDown" ref="0x2b8fd45bd8f0" loc="49:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.DidNotStartChargeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDown" scoped="" ref="0x2b8fd45bd8f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45bdc40"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45bddc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TestCase" ref="0x2b8fd45bfd28" loc="46:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.DidNotStartChargeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TestCase" scoped="" ref="0x2b8fd45bfd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45be0a0"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45be228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUp" ref="0x2b8fd45bd020" loc="48:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.DidNotStartChargeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUp" scoped="" ref="0x2b8fd45bd020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45bd370"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45bd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUpOneTime" ref="0x2b8fd45be620" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.DidNotStartChargeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd45be620"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45be970"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45beaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDownOneTime" ref="0x2b8fd45b8418" loc="50:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.NotifyNotCalledC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd45b8418"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45b8768"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45b88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDown" ref="0x2b8fd45b9ae0" loc="49:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.NotifyNotCalledC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDown" scoped="" ref="0x2b8fd45b9ae0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45b9e30"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TestCase" ref="0x2b8fd45ba020" loc="46:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.NotifyNotCalledC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TestCase" scoped="" ref="0x2b8fd45ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45ba370"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45ba4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUp" ref="0x2b8fd45b9210" loc="48:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.NotifyNotCalledC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUp" scoped="" ref="0x2b8fd45b9210"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45b9560"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45b96e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUpOneTime" ref="0x2b8fd45ba8f0" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.NotifyNotCalledC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd45ba8f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45bac40"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45badc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDownOneTime" ref="0x2b8fd45b3620" loc="50:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.PGNotifySetTrueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd45b3620"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45b3970"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45b3af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDown" ref="0x2b8fd45b4ce8" loc="49:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.PGNotifySetTrueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDown" scoped="" ref="0x2b8fd45b4ce8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45b30a0"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45b3228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TestCase" ref="0x2b8fd45b50e0" loc="46:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.PGNotifySetTrueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TestCase" scoped="" ref="0x2b8fd45b50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45b5430"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45b55b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUp" ref="0x2b8fd45b4418" loc="48:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.PGNotifySetTrueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUp" scoped="" ref="0x2b8fd45b4418"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45b4768"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45b48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUpOneTime" ref="0x2b8fd45b59b0" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.PGNotifySetTrueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd45b59b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45b5d00"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDownOneTime" ref="0x2b8fd45af768" loc="50:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.PGNotifySetFalseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDownOneTime" scoped="" ref="0x2b8fd45af768"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45afab8"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45afc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TearDown" ref="0x2b8fd45b0e70" loc="49:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.PGNotifySetFalseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TearDown" scoped="" ref="0x2b8fd45b0e70"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45af1e8"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45af370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TestCase" ref="0x2b8fd45b1370" loc="46:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.PGNotifySetFalseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TestCase" scoped="" ref="0x2b8fd45b1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45b16c0"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45b1848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUp" ref="0x2b8fd45b05a0" loc="48:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.PGNotifySetFalseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUp" scoped="" ref="0x2b8fd45b05a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45b08f0"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45b0a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetUpOneTime" ref="0x2b8fd45b1c40" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestCaseC.nc">
      <component-ref qname="TestChargerMonitorC.PGNotifySetFalseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetUpOneTime" scoped="" ref="0x2b8fd45b1c40"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b8fd3a01460"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="TestControl"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd45b0020"/>
        <function-ref name="done" scoped="" ref="0x2b8fd45b01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerstop" ref="0x2b8fd45fb190" loc="93:../../ChargerMonitor/ChargerMonitorP.nc">
      <component-ref qname="ChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerstop" scoped="" ref="0x2b8fd45fb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd45fb4e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd45fb668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PGNotify" ref="0x2b8fd45d4548" loc="14:../../ChargerMonitor/ChargerMonitorP.nc">
      <component-ref qname="ChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PGNotify" scoped="" ref="0x2b8fd45d4548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2b8fd45d7510"/>
        <function-ref name="enable" scoped="" ref="0x2b8fd45d70c0"/>
        <function-ref name="notify" scoped="" ref="0x2b8fd45d7960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PG" ref="0x2b8fd45ddb18" loc="10:../../ChargerMonitor/ChargerMonitorP.nc">
      <component-ref qname="ChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PG" scoped="" ref="0x2b8fd45ddb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45dde68"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd45db020"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45db1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd45db330"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45db4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd45db640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45db7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd45db950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STAT1" ref="0x2b8fd45dbc70" loc="11:../../ChargerMonitor/ChargerMonitorP.nc">
      <component-ref qname="ChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STAT1" scoped="" ref="0x2b8fd45dbc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45da020"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd45da1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45da330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd45da4b8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45da640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd45da7c8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45da950"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd45daad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Notify" ref="0x2b8fd45d3020" loc="17:../../ChargerMonitor/ChargerMonitorP.nc">
      <component-ref qname="ChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Notify" scoped="" ref="0x2b8fd45d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2b8fd45d2020"/>
        <function-ref name="enable" scoped="" ref="0x2b8fd45d3b68"/>
        <function-ref name="notify" scoped="" ref="0x2b8fd45d2470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8fd45e2208" loc="5:../../ChargerMonitor/ChargerMonitorP.nc">
      <component-ref qname="ChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8fd45e2208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8fd45e2558"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8fd45e26e0"/>
        <function-ref name="led1On" scoped="" ref="0x2b8fd45e2868"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8fd45e29f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8fd45e2b78"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45e2d00"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8fd45e1020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8fd45e1640"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45e11a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8fd45e1330"/>
        <function-ref name="led2On" scoped="" ref="0x2b8fd45e14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STAT2" ref="0x2b8fd45dadf8" loc="12:../../ChargerMonitor/ChargerMonitorP.nc">
      <component-ref qname="ChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STAT2" scoped="" ref="0x2b8fd45dadf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45d9170"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd45d92f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45d9480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd45d9608"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45d9790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd45d9918"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45d9aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd45d9c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerstart" ref="0x2b8fd45fd590" loc="89:../../ChargerMonitor/ChargerMonitorP.nc">
      <component-ref qname="ChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerstart" scoped="" ref="0x2b8fd45fd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8fd45fd8e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8fd45fda68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b8fd45e1a08" loc="6:../../ChargerMonitor/ChargerMonitorP.nc">
      <component-ref qname="ChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8fd45e1a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd45ded60"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd45df470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8fd45de1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8fd45dfd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b8fd45dd648"/>
        <function-ref name="gett0" scoped="" ref="0x2b8fd45dd1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd45df8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8fd45e0578"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8fd45de790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8fd45e0a18"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd45df020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DoneChargingLedOn" ref="0x2b8fd4619020" loc="16:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DoneChargingLedOn" scoped="" ref="0x2b8fd4619020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4619370"/>
        <function-ref name="done" scoped="" ref="0x2b8fd46194f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NotifyNotCalled" ref="0x2b8fd4617198" loc="20:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NotifyNotCalled" scoped="" ref="0x2b8fd4617198"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd46174e8"/>
        <function-ref name="done" scoped="" ref="0x2b8fd4617670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChargingLedOn" ref="0x2b8fd461b688" loc="15:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChargingLedOn" scoped="" ref="0x2b8fd461b688"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd461b9d8"/>
        <function-ref name="done" scoped="" ref="0x2b8fd461bb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PGNotifySetFalse" ref="0x2b8fd46163a8" loc="22:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PGNotifySetFalse" scoped="" ref="0x2b8fd46163a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd46166f8"/>
        <function-ref name="done" scoped="" ref="0x2b8fd4616880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PG" ref="0x2b8fd45e6650" loc="9:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PG" scoped="" ref="0x2b8fd45e6650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45e69a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd45e6b28"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45e6cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd45e6e38"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45e5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd45e51a8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45e5330"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd45e54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STAT1" ref="0x2b8fd45e57d8" loc="10:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STAT1" scoped="" ref="0x2b8fd45e57d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45e5b28"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd45e5cb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45e5e38"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd45e4020"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45e41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd45e4330"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45e44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd45e4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TestTimer" ref="0x2b8fd4616ce8" loc="23:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TestTimer" scoped="" ref="0x2b8fd4616ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd4611088"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd4614688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8fd4613470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8fd4613020"/>
        <function-ref name="getdt" scoped="" ref="0x2b8fd4611928"/>
        <function-ref name="gett0" scoped="" ref="0x2b8fd46114d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd4614ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8fd46158b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8fd4613a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8fd4615d58"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd4614238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ErrorLedOn" ref="0x2b8fd4619840" loc="17:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ErrorLedOn" scoped="" ref="0x2b8fd4619840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4619b90"/>
        <function-ref name="done" scoped="" ref="0x2b8fd4619d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Notify" ref="0x2b8fd4610020" loc="26:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Notify" scoped="" ref="0x2b8fd4610020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2b8fd460f020"/>
        <function-ref name="enable" scoped="" ref="0x2b8fd4610b68"/>
        <function-ref name="notify" scoped="" ref="0x2b8fd460f470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DidNotStartCharge" ref="0x2b8fd4618910" loc="19:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DidNotStartCharge" scoped="" ref="0x2b8fd4618910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4618c60"/>
        <function-ref name="done" scoped="" ref="0x2b8fd4618de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b8fd45efe50" loc="7:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8fd45efe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8fd45ec1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8fd45ec370"/>
        <function-ref name="led1On" scoped="" ref="0x2b8fd45ec4f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8fd45ec680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8fd45ec808"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45ec990"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8fd45ecb18"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8fd45eb1a8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45ecca0"/>
        <function-ref name="led0On" scoped="" ref="0x2b8fd45ece28"/>
        <function-ref name="led2On" scoped="" ref="0x2b8fd45eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STAT2" ref="0x2b8fd45e4960" loc="11:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STAT2" scoped="" ref="0x2b8fd45e4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8fd45e4cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8fd45e4e38"/>
        <function-ref name="toggle" scoped="" ref="0x2b8fd45e3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8fd45e31a8"/>
        <function-ref name="get" scoped="" ref="0x2b8fd45e3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8fd45e34b8"/>
        <function-ref name="set" scoped="" ref="0x2b8fd45e3640"/>
        <function-ref name="clr" scoped="" ref="0x2b8fd45e37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BoolNotify" ref="0x2b8fd45e3c30" loc="12:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BoolNotify" scoped="" ref="0x2b8fd45e3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x2b8fd461cc38"/>
        <function-ref name="enable" scoped="" ref="0x2b8fd461c7e8"/>
        <function-ref name="notify" scoped="" ref="0x2b8fd461b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsOff" ref="0x2b8fd46180a8" loc="18:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsOff" scoped="" ref="0x2b8fd46180a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd46183f8"/>
        <function-ref name="done" scoped="" ref="0x2b8fd4618580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8fd45eb570" loc="8:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8fd45eb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b8fd3bc5190"/>
            <typename><typedef-ref name="TMilli" ref="0x2b8fd3bc54e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8fd45e78f0"/>
        <function-ref name="fired" scoped="" ref="0x2b8fd45e9020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8fd45e9d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8fd45e98c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b8fd45e61c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b8fd45e7d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8fd45e9470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8fd45ea0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8fd45e7320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8fd45ea598"/>
        <function-ref name="stop" scoped="" ref="0x2b8fd45eaa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PGNotifySetTrue" ref="0x2b8fd46179e8" loc="21:TestChargerMonitorP.nc">
      <component-ref qname="TestChargerMonitorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PGNotifySetTrue" scoped="" ref="0x2b8fd46179e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TestCase"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8fd4617e38"/>
        <function-ref name="done" scoped="" ref="0x2b8fd4616020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8fd3bc10f0" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8fd3bc10f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b8fd3bcc918" loc="136:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b8fd3bcf4a8" loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b8fd3bcd118" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b8fd3bceb18" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b8fd3bcee30" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b8fd3bce3e0" loc="98:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b8fd3bca878" loc="151:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b8fd3bca070" loc="144:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b8fd3bcfc20" loc="92:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b8fd3bc1bc0" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b8fd3bc1950" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b8fd3bcc020" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b8fd3bcda48" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b8fd3bcdd60" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b8fd3bd1628" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b8fd3bd13b8" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8fd3bd1dd0" loc="78:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8fd3bfe6b0" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8fd3bfe6b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8fd3bfe8e0" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3bfe8e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b8fd3bf7178" loc="109:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3bfe8e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b8fd3bf9328" loc="78:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b8fd3bf8810" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3bfe8e0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3bfe8e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b8fd3bf8270" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3bfe8e0"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b8fd3bf8590" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3bfe8e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b8fd3bf9a98" loc="88:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b8fd3bf78f8" loc="116:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3bfe8e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8fd3bfa3c8" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3bfe8e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b8fd3bfa158" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3bfe8e0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8fd3bfab98" loc="73:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCompare" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x2b8fd3c20390" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
          <interfacedef-ref qname="HplAtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3c20390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2b8fd3c2b7d0" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b8fd3c2b560" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b8fd3c1c360" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b8fd3c1dc60" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x2b8fd3c2a6e8" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8fd3c20c48" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3c20390"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b8fd3c1ca08" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b8fd3c2a020" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b8fd3c1be80" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8fd3c1d598" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3c20390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b8fd3c1d328" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3c20390"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8fd3c1b110" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8fd3c1b7b0" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCounter" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x2b8fd3c084b8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
          <interfacedef-ref qname="HplAtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3c084b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2b8fd3c13948" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b8fd3c136d8" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b8fd3c154b0" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8fd3c08d70" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3c084b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b8fd3c15b58" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b8fd3c12070" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b8fd3c17d90" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b8fd3c13020" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8fd3c176a8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3c084b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b8fd3c17438" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3c084b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8fd3c14258" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8fd3c148f8" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b8fd3c31490" loc="62:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b8fd3c89958" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b8fd3c896e8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b8fd3c78178" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b8fd3c78b70" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b8fd3c78900" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b8fd3c8a620" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b8fd3c8a3b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b8fd3c8ae68" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCapture" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x2b8fd3cc7740" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
          <interfacedef-ref qname="HplAtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3cc7740"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2b8fd3cbeb80" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b8fd3cbe910" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b8fd3cc16f0" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b8fd3cc1020" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8fd3cc2020" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3cc7740"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b8fd3cc1d98" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b8fd3cd12a8" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b8fd3cbe258" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8fd3cc2920" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3cc7740"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b8fd3cc26b0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3cc7740"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8fd3cc0488" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8fd3cc0b28" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/spensamote/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b8fd3ba4d28" loc="62:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b8fd3b59cf0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b8fd3b99d08" loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b8fd3baf428" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b8fd3bafb60" loc="67:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b8fd3bae328" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b8fd3bad1d8" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b8fd3bab810" loc="100:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8fd3baa020" loc="117:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b8fd3baea40" loc="77:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8fd3baab20" loc="134:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b8fd3baa8b0" loc="134:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b8fd3bb0cd8" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b8fd3bad948" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b8fd3bab0d8" loc="94:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b8fd3b86e28" loc="76:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8fd3d73888" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8fd3d73888"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8fd3d73ab8" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3d73ab8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b8fd3d70378" loc="64:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8fd3d73ab8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b8fd3d863e0" loc="76:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b8fd3d70b90" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b8fd3d86ad0" loc="82:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b8fd3a31070" loc="67:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b8fd3a31860" loc="75:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TestControl" loc="36:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestControl.nc">
      <documentation loc="32:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestControl.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="run" ref="0x2b8fd3ea76c8" loc="38:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestControl.nc">
        <interfacedef-ref qname="TestControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="done" ref="0x2b8fd3ea7d10" loc="40:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TestControl.nc">
        <interfacedef-ref qname="TestControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TestCase" loc="37:/opt/tinyos-2.x-contrib/tunit/tos/interfaces/TestCase.nc">
      <documentation loc="32:/opt/tinyos-2.x-contrib/tunit/tos/interfaces/TestCase.nc">
        <short>&#10; T-Unit TinyOS Unit Testing Interface&#10; </short>
        <long>&#10; T-Unit TinyOS Unit Testing Interface&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="run" ref="0x2b8fd3ea9d98" loc="39:/opt/tinyos-2.x-contrib/tunit/tos/interfaces/TestCase.nc">
        <interfacedef-ref qname="TestCase"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="done" ref="0x2b8fd3ea5448" loc="41:/opt/tinyos-2.x-contrib/tunit/tos/interfaces/TestCase.nc">
        <interfacedef-ref qname="TestCase"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b8fd3ed6a90" loc="71:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b8fd3ed8258" loc="56:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b8fd3ed6338" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b8fd3ed60c8" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b8fd3ed8960" loc="61:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b8fd3ed9020" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b8fd3edcc20" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b8fd3ed9a48" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b8fd3ed97d8" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b8fd3eebbd0" loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b8fd3eb9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b8fd3eeaa50" loc="60:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b8fd3eea360" loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b8fd3ebab50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b8fd3eeb3f0" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b8fd3ebab50"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8fd3eb9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b8fd3ed4de0" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b8fd3ebab50"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b8fd3eeb170" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8fd3eb9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TUnitProcessing" loc="37:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
      <documentation loc="32:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
        <short> &#10; Communication interface between the computer and TUnit running on the node&#10; </short>
        <long> &#10; Communication interface between the computer and TUnit running on the node&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="testResultIsAboveFailed" ref="0x2b8fd3ec4630" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
        <interfacedef-ref qname="TUnitProcessing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="testId" ref="0x2b8fd3ec64b8" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
          <variable name="failMsg" ref="0x2b8fd3ec67e0" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="lowerbound" ref="0x2b8fd3ec6b48" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
          <variable name="actual" ref="0x2b8fd3ec4020" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
          <variable name="assertionId" ref="0x2b8fd3ec4380" loc="47:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="testEqualsFailed" ref="0x2b8fd3eca0e8" loc="41:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
        <interfacedef-ref qname="TUnitProcessing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="testId" ref="0x2b8fd3ecb0c8" loc="41:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
          <variable name="failMsg" ref="0x2b8fd3ecb3f0" loc="41:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="expected" ref="0x2b8fd3ecb748" loc="41:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
          <variable name="actual" ref="0x2b8fd3ecba88" loc="41:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
          <variable name="assertionId" ref="0x2b8fd3ecbde8" loc="41:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tearDownOneTime" ref="0x2b8fd3edd6d0" loc="61:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
        <interfacedef-ref qname="TUnitProcessing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="testResultIsBelowFailed" ref="0x2b8fd3ec7cd8" loc="45:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
        <interfacedef-ref qname="TUnitProcessing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="testId" ref="0x2b8fd3ec8bc0" loc="45:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
          <variable name="failMsg" ref="0x2b8fd3ec7020" loc="45:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="upperbound" ref="0x2b8fd3ec7388" loc="45:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
          <variable name="actual" ref="0x2b8fd3ec76c8" loc="45:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
          <variable name="assertionId" ref="0x2b8fd3ec7a28" loc="45:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="testFailed" ref="0x2b8fd3ec3650" loc="49:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
        <interfacedef-ref qname="TUnitProcessing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="testId" ref="0x2b8fd3ec4cd8" loc="49:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
          <variable name="failMsg" ref="0x2b8fd3ec3060" loc="49:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="assertionId" ref="0x2b8fd3ec33c0" loc="49:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="testNotEqualsFailed" ref="0x2b8fd3ec8498" loc="43:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
        <interfacedef-ref qname="TUnitProcessing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="testId" ref="0x2b8fd3eca7e8" loc="43:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
          <variable name="failMsg" ref="0x2b8fd3ecab10" loc="43:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="actual" ref="0x2b8fd3ecae50" loc="43:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8fd3423608"/></typename>
            </type-int>
          </variable>
          <variable name="assertionId" ref="0x2b8fd3ec81f8" loc="43:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="testSuccess" ref="0x2b8fd3ecc9b0" loc="39:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
        <interfacedef-ref qname="TUnitProcessing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="testId" ref="0x2b8fd3ecc3d0" loc="39:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
          <variable name="assertionId" ref="0x2b8fd3ecc730" loc="39:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="allDone" ref="0x2b8fd3ec3cb0" loc="52:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
        <interfacedef-ref qname="TUnitProcessing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="pong" ref="0x2b8fd3ec2328" loc="54:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
        <interfacedef-ref qname="TUnitProcessing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="run" ref="0x2b8fd3ec2960" loc="57:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
        <interfacedef-ref qname="TUnitProcessing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ping" ref="0x2b8fd3edd020" loc="59:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/TUnitProcessing.nc">
        <interfacedef-ref qname="TUnitProcessing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b8fd3ed1108" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b8fd3ed2e48" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b8fd3ed0500" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b8fd3ed0290" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8fd3ed24d0" loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8fd3ed18f0" loc="130:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StatsQuery" loc="44:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/StatsQuery.nc">
      <documentation loc="32:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/StatsQuery.nc">
        <short>&#10; This is one of the few exceptions to the &#34;Don't let events return&#10; values&#34; rule.</short>
        <long>&#10; This is one of the few exceptions to the &#34;Don't let events return&#10; values&#34; rule.  We have an optional component that doesn't have&#10; to be compiled in with the rest of the system.  If it's there,&#10; then this event goes to it through its own wiring. If it's not&#10; there, then this event returns a default value inside the &#10; component where it is provided (TUnitP).  The test run framework&#10; cannot continue onto the next test or signal allDone until it&#10; knows that the Statistics component has finished up whatever it's &#10; doing.&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="isIdle" ref="0x2b8fd3ecda08" loc="46:/opt/tinyos-2.x-contrib/tunit/tos/lib/tunit/StatsQuery.nc">
        <interfacedef-ref qname="StatsQuery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b8fd3f637e0" loc="60:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b8fd3a5f480" loc="57:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b8fd3a8a360" loc="72:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b8fd3a5fb98" loc="65:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8fd3fc3920" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8fd3eb9020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b8fd3fc3020" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8fd3eb9020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b8fd3fc3380" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8fd3fc3690" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b8fd3fbec68" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd3fbe6a0" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8fd3fbe9b0" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8fd3fc2e28" loc="123:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8fd3fc1be8" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd3fc1978" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b8fd3fc2030" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd3fbfa60" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b8fd3fbfd88" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b8fd3fb9b78" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
              <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd3fb9278" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b8fd3fb95a0" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8fd3fb98b0" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b8fd4009e48" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd4009bd8" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b8fd4028e20" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd4028bb0" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b8fd4023020" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd4024a08" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8fd4024d18" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8fd4024178" loc="106:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b8fd40252a0" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd4027c48" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8fd4025020" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b8fd40373b0" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b8fd3ebab50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8fd4037140" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b8fd401e2d0" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b8fd3eb9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8fd401e060" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b8fd4020840" loc="68:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b8fd3eb9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b8fd401f2d0" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b8fd3eb9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8fd401f060" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b8fd401ba60" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8fd3eb9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8fd401b4a8" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b8fd401b7e0" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8fd3eb9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b8fd401d618" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8fd3eb9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8fd401d060" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b8fd401d398" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b8fd3eb9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b8fd4039020" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8fd403acf8" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b8fd40382a0" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8fd4039ce8" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b8fd4038020" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b8fd3eba7a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b8fd403bc38" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8fd403b9c8" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b8fd40357b8" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b8fd3ebab50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8fd4035208" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b8fd4035538" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b8fd3ebab50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b8fd4034560" loc="195:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b8fd3ebab50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b8fd4029cc8" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd4029a58" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b8fd402f020" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd4030cb0" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b8fd402d108" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd402fe28" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8fd40495b0" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd4049020" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8fd4049330" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b8fd4046878" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd40462b0" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8fd40465c0" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8fd4044a58" loc="112:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8fd4047828" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd40475b8" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b8fd4045c10" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd4045668" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b8fd4045990" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b8fd4105640" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd4105060" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b8fd41053c0" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b8fd410a948" loc="15:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b8fd4107760" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8fd4107198" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b8fd3f96d00"/>
                <typename><typedef-ref name="message_t" ref="0x2b8fd3fb42e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b8fd41074e0" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b8fd4147e20" loc="95:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8fd4143600" loc="105:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b8fd4141328" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b8fd4146bb0" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b8fd414c1d8" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b8fd414a528" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b8fd4148020" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8fd4149d60" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b8fd414ad40" loc="79:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b8fd414ccc8" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8fd414ca58" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b8fd4148818" loc="100:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b8fd41495b8" loc="85:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b8fd412d110" loc="71:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b8fd412d9c8" loc="81:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b8fd412e7b8" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b8fd412e548" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b8fd412b4e8" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b8fd412b278" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b8fd414f020" loc="62:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b8fd414fbc8" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8fd414f958" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b8fd414e640" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b8fd414e3d0" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8fd425e2a0" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b8fd4262c28" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8fd425e020" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b8fd425cc28" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b8fd425c9b8" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b8fd4285988" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b8fd42853e8" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8fd4285708" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b8fd425b948" loc="65:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b8fd42842b0" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b8fd4283898" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8fd4283bb8" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b8fd4284020" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b8fd425c258" loc="72:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b8fd425da18" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b8fd425d140" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8fd425d460" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8fd3422b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b8fd425d788" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8fd4290630" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b8fd42903c0" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b8fd428f408" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b8fd4290e20" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b8fd428f188" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b8fd42a9e70" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b8fd42a9070" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b8fd42a54a8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8fd42a5238" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b8fd42a74e8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b8fd42ab1d8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b8fd42ab8f8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b8fd42a9790" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b8fd42a8578" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b8fd42a8e30" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8fd42a8bc0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b8fd42a7b98" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8fd3422160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b8fd44b7020" loc="44:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b8fd44b76e8" loc="45:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b8fd44b8258" loc="42:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b8fd44b54a0" loc="47:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8fd44b88f8" loc="43:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b8fd3a03cc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b8fd44b7da0" loc="46:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8fd44b9500" loc="40:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b8fd44b9b70" loc="41:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b8fd45d85e0" loc="52:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b8fd45d85e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x2b8fd45d5650" loc="67:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b8fd45d8e28" loc="59:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8fd3a27ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x2b8fd45d4020" loc="74:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b8fd45d85e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b8fd45d5d80" loc="74:/opt/tinyos-2.x/tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b8fd45d85e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
